// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module clusterOp_sin_or_cos_double_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        t_in,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] t_in;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_pp0_stage0_subdone;
wire   [3:0] ref_4oPi_table_256_V_address0;
reg    ref_4oPi_table_256_V_ce0;
wire   [255:0] ref_4oPi_table_256_V_q0;
wire   [7:0] fourth_order_double_sin_cos_K0_V_address0;
reg    fourth_order_double_sin_cos_K0_V_ce0;
wire   [58:0] fourth_order_double_sin_cos_K0_V_q0;
wire   [7:0] fourth_order_double_sin_cos_K1_V_address0;
reg    fourth_order_double_sin_cos_K1_V_ce0;
wire   [51:0] fourth_order_double_sin_cos_K1_V_q0;
wire   [7:0] fourth_order_double_sin_cos_K2_V_address0;
reg    fourth_order_double_sin_cos_K2_V_ce0;
wire   [43:0] fourth_order_double_sin_cos_K2_V_q0;
wire   [7:0] fourth_order_double_sin_cos_K3_V_address0;
reg    fourth_order_double_sin_cos_K3_V_ce0;
wire   [32:0] fourth_order_double_sin_cos_K3_V_q0;
wire   [7:0] fourth_order_double_sin_cos_K4_V_address0;
reg    fourth_order_double_sin_cos_K4_V_ce0;
wire   [24:0] fourth_order_double_sin_cos_K4_V_q0;
reg   [0:0] p_Result_11_reg_1421;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] p_Result_11_reg_1421_pp0_iter1_reg;
reg   [0:0] p_Result_11_reg_1421_pp0_iter2_reg;
reg   [0:0] p_Result_11_reg_1421_pp0_iter3_reg;
reg   [0:0] p_Result_11_reg_1421_pp0_iter4_reg;
reg   [0:0] p_Result_11_reg_1421_pp0_iter5_reg;
reg   [0:0] p_Result_11_reg_1421_pp0_iter6_reg;
reg   [0:0] p_Result_11_reg_1421_pp0_iter7_reg;
reg   [0:0] p_Result_11_reg_1421_pp0_iter8_reg;
wire   [10:0] din_exp_V_fu_306_p4;
reg   [10:0] din_exp_V_reg_1426;
reg   [10:0] din_exp_V_reg_1426_pp0_iter1_reg;
reg   [10:0] din_exp_V_reg_1426_pp0_iter2_reg;
reg   [10:0] din_exp_V_reg_1426_pp0_iter3_reg;
reg   [10:0] din_exp_V_reg_1426_pp0_iter4_reg;
reg   [10:0] din_exp_V_reg_1426_pp0_iter5_reg;
reg   [10:0] din_exp_V_reg_1426_pp0_iter6_reg;
reg   [10:0] din_exp_V_reg_1426_pp0_iter7_reg;
reg   [10:0] din_exp_V_reg_1426_pp0_iter8_reg;
wire   [0:0] closepath_fu_320_p2;
reg   [0:0] closepath_reg_1433;
reg   [0:0] closepath_reg_1433_pp0_iter1_reg;
reg   [0:0] closepath_reg_1433_pp0_iter2_reg;
reg   [0:0] closepath_reg_1433_pp0_iter3_reg;
reg   [0:0] closepath_reg_1433_pp0_iter4_reg;
reg   [0:0] closepath_reg_1433_pp0_iter5_reg;
reg   [0:0] closepath_reg_1433_pp0_iter6_reg;
reg   [0:0] closepath_reg_1433_pp0_iter7_reg;
reg   [0:0] closepath_reg_1433_pp0_iter8_reg;
wire   [51:0] p_Result_12_fu_326_p1;
reg   [51:0] p_Result_12_reg_1440;
reg   [51:0] p_Result_12_reg_1440_pp0_iter1_reg;
reg   [51:0] p_Result_12_reg_1440_pp0_iter2_reg;
wire   [6:0] trunc_ln628_fu_359_p1;
reg   [6:0] trunc_ln628_reg_1450;
reg   [6:0] trunc_ln628_reg_1450_pp0_iter1_reg;
wire   [0:0] icmp_ln1019_1_fu_363_p2;
reg   [0:0] icmp_ln1019_1_reg_1455;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter1_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter2_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter3_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter4_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter5_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter6_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter7_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter8_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter9_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter10_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter11_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter12_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter13_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter14_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter15_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter16_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter17_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter18_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter19_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter20_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter21_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter22_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter23_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter24_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter25_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter26_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter27_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter28_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter29_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter30_reg;
reg   [0:0] icmp_ln1019_1_reg_1455_pp0_iter31_reg;
reg   [255:0] table_256_V_reg_1461;
reg  signed [169:0] Med_V_reg_1466;
wire   [169:0] grp_fu_398_p2;
reg   [169:0] ret_V_5_reg_1476;
reg   [123:0] Mx_bits_V_reg_1481;
reg   [2:0] k_V_reg_1487;
reg   [2:0] k_V_reg_1487_pp0_iter8_reg;
wire   [123:0] Mx_bits_V_3_fu_446_p3;
reg   [123:0] Mx_bits_V_3_reg_1492;
wire   [6:0] Mx_zeros_fu_501_p1;
reg   [6:0] Mx_zeros_reg_1497;
reg   [62:0] Mx_V_reg_1503;
reg   [62:0] Mx_V_reg_1503_pp0_iter10_reg;
reg   [62:0] Mx_V_reg_1503_pp0_iter11_reg;
reg   [62:0] Mx_V_reg_1503_pp0_iter12_reg;
reg   [62:0] Mx_V_reg_1503_pp0_iter13_reg;
reg   [62:0] Mx_V_reg_1503_pp0_iter14_reg;
reg   [62:0] Mx_V_reg_1503_pp0_iter15_reg;
reg   [62:0] Mx_V_reg_1503_pp0_iter16_reg;
reg   [62:0] Mx_V_reg_1503_pp0_iter17_reg;
reg   [62:0] Mx_V_reg_1503_pp0_iter18_reg;
reg   [62:0] Mx_V_reg_1503_pp0_iter19_reg;
reg   [62:0] Mx_V_reg_1503_pp0_iter20_reg;
reg   [62:0] Mx_V_reg_1503_pp0_iter21_reg;
reg   [62:0] Mx_V_reg_1503_pp0_iter22_reg;
wire  signed [10:0] Ex_V_3_fu_544_p2;
reg  signed [10:0] Ex_V_3_reg_1510;
reg  signed [10:0] Ex_V_3_reg_1510_pp0_iter10_reg;
reg  signed [10:0] Ex_V_3_reg_1510_pp0_iter11_reg;
reg  signed [10:0] Ex_V_3_reg_1510_pp0_iter12_reg;
reg  signed [10:0] Ex_V_3_reg_1510_pp0_iter13_reg;
reg  signed [10:0] Ex_V_3_reg_1510_pp0_iter14_reg;
reg  signed [10:0] Ex_V_3_reg_1510_pp0_iter15_reg;
reg  signed [10:0] Ex_V_3_reg_1510_pp0_iter16_reg;
reg  signed [10:0] Ex_V_3_reg_1510_pp0_iter17_reg;
reg  signed [10:0] Ex_V_3_reg_1510_pp0_iter18_reg;
reg  signed [10:0] Ex_V_3_reg_1510_pp0_iter19_reg;
reg  signed [10:0] Ex_V_3_reg_1510_pp0_iter20_reg;
reg  signed [10:0] Ex_V_3_reg_1510_pp0_iter21_reg;
reg  signed [10:0] Ex_V_3_reg_1510_pp0_iter22_reg;
reg  signed [10:0] Ex_V_3_reg_1510_pp0_iter23_reg;
reg  signed [10:0] Ex_V_3_reg_1510_pp0_iter24_reg;
reg  signed [10:0] Ex_V_3_reg_1510_pp0_iter25_reg;
reg  signed [10:0] Ex_V_3_reg_1510_pp0_iter26_reg;
reg  signed [10:0] Ex_V_3_reg_1510_pp0_iter27_reg;
reg  signed [10:0] Ex_V_3_reg_1510_pp0_iter28_reg;
reg  signed [10:0] Ex_V_3_reg_1510_pp0_iter29_reg;
reg  signed [10:0] Ex_V_3_reg_1510_pp0_iter30_reg;
reg   [0:0] isNeg_reg_1516;
wire   [0:0] sin_basis_fu_558_p10;
reg   [0:0] sin_basis_reg_1522;
reg   [0:0] sin_basis_reg_1522_pp0_iter10_reg;
reg   [0:0] sin_basis_reg_1522_pp0_iter11_reg;
reg   [0:0] sin_basis_reg_1522_pp0_iter12_reg;
reg   [0:0] sin_basis_reg_1522_pp0_iter13_reg;
reg   [0:0] sin_basis_reg_1522_pp0_iter14_reg;
reg   [0:0] sin_basis_reg_1522_pp0_iter15_reg;
reg   [0:0] sin_basis_reg_1522_pp0_iter16_reg;
reg   [0:0] sin_basis_reg_1522_pp0_iter17_reg;
reg   [0:0] sin_basis_reg_1522_pp0_iter18_reg;
reg   [0:0] sin_basis_reg_1522_pp0_iter19_reg;
reg   [0:0] sin_basis_reg_1522_pp0_iter20_reg;
reg   [0:0] sin_basis_reg_1522_pp0_iter21_reg;
reg   [0:0] sin_basis_reg_1522_pp0_iter22_reg;
reg   [0:0] sin_basis_reg_1522_pp0_iter23_reg;
reg   [0:0] sin_basis_reg_1522_pp0_iter24_reg;
reg   [0:0] sin_basis_reg_1522_pp0_iter25_reg;
reg   [0:0] sin_basis_reg_1522_pp0_iter26_reg;
reg   [0:0] sin_basis_reg_1522_pp0_iter27_reg;
reg   [0:0] sin_basis_reg_1522_pp0_iter28_reg;
reg   [0:0] sin_basis_reg_1522_pp0_iter29_reg;
reg   [0:0] sin_basis_reg_1522_pp0_iter30_reg;
wire   [0:0] icmp_ln1019_fu_671_p2;
reg   [0:0] icmp_ln1019_reg_1529;
reg   [0:0] icmp_ln1019_reg_1529_pp0_iter10_reg;
reg   [0:0] icmp_ln1019_reg_1529_pp0_iter11_reg;
reg   [0:0] icmp_ln1019_reg_1529_pp0_iter12_reg;
reg   [0:0] icmp_ln1019_reg_1529_pp0_iter13_reg;
reg   [0:0] icmp_ln1019_reg_1529_pp0_iter14_reg;
reg   [0:0] icmp_ln1019_reg_1529_pp0_iter15_reg;
reg   [0:0] icmp_ln1019_reg_1529_pp0_iter16_reg;
reg   [0:0] icmp_ln1019_reg_1529_pp0_iter17_reg;
reg   [0:0] icmp_ln1019_reg_1529_pp0_iter18_reg;
reg   [0:0] icmp_ln1019_reg_1529_pp0_iter19_reg;
reg   [0:0] icmp_ln1019_reg_1529_pp0_iter20_reg;
reg   [0:0] icmp_ln1019_reg_1529_pp0_iter21_reg;
reg   [0:0] icmp_ln1019_reg_1529_pp0_iter22_reg;
reg   [0:0] icmp_ln1019_reg_1529_pp0_iter23_reg;
reg   [0:0] icmp_ln1019_reg_1529_pp0_iter24_reg;
reg   [0:0] icmp_ln1019_reg_1529_pp0_iter25_reg;
reg   [0:0] icmp_ln1019_reg_1529_pp0_iter26_reg;
reg   [0:0] icmp_ln1019_reg_1529_pp0_iter27_reg;
reg   [0:0] icmp_ln1019_reg_1529_pp0_iter28_reg;
reg   [0:0] icmp_ln1019_reg_1529_pp0_iter29_reg;
reg   [0:0] icmp_ln1019_reg_1529_pp0_iter30_reg;
reg   [0:0] icmp_ln1019_reg_1529_pp0_iter31_reg;
wire   [0:0] and_ln300_fu_676_p2;
reg   [0:0] and_ln300_reg_1534;
reg   [0:0] and_ln300_reg_1534_pp0_iter10_reg;
reg   [0:0] and_ln300_reg_1534_pp0_iter11_reg;
reg   [0:0] and_ln300_reg_1534_pp0_iter12_reg;
reg   [0:0] and_ln300_reg_1534_pp0_iter13_reg;
reg   [0:0] and_ln300_reg_1534_pp0_iter14_reg;
reg   [0:0] and_ln300_reg_1534_pp0_iter15_reg;
reg   [0:0] and_ln300_reg_1534_pp0_iter16_reg;
reg   [0:0] and_ln300_reg_1534_pp0_iter17_reg;
reg   [0:0] and_ln300_reg_1534_pp0_iter18_reg;
reg   [0:0] and_ln300_reg_1534_pp0_iter19_reg;
reg   [0:0] and_ln300_reg_1534_pp0_iter20_reg;
reg   [0:0] and_ln300_reg_1534_pp0_iter21_reg;
reg   [0:0] and_ln300_reg_1534_pp0_iter22_reg;
reg   [0:0] and_ln300_reg_1534_pp0_iter23_reg;
reg   [0:0] and_ln300_reg_1534_pp0_iter24_reg;
reg   [0:0] and_ln300_reg_1534_pp0_iter25_reg;
reg   [0:0] and_ln300_reg_1534_pp0_iter26_reg;
reg   [0:0] and_ln300_reg_1534_pp0_iter27_reg;
reg   [0:0] and_ln300_reg_1534_pp0_iter28_reg;
reg   [0:0] and_ln300_reg_1534_pp0_iter29_reg;
reg   [0:0] and_ln300_reg_1534_pp0_iter30_reg;
wire   [0:0] or_ln300_fu_686_p2;
reg   [0:0] or_ln300_reg_1539;
reg   [0:0] or_ln300_reg_1539_pp0_iter10_reg;
reg   [0:0] or_ln300_reg_1539_pp0_iter11_reg;
reg   [0:0] or_ln300_reg_1539_pp0_iter12_reg;
reg   [0:0] or_ln300_reg_1539_pp0_iter13_reg;
reg   [0:0] or_ln300_reg_1539_pp0_iter14_reg;
reg   [0:0] or_ln300_reg_1539_pp0_iter15_reg;
reg   [0:0] or_ln300_reg_1539_pp0_iter16_reg;
reg   [0:0] or_ln300_reg_1539_pp0_iter17_reg;
reg   [0:0] or_ln300_reg_1539_pp0_iter18_reg;
reg   [0:0] or_ln300_reg_1539_pp0_iter19_reg;
reg   [0:0] or_ln300_reg_1539_pp0_iter20_reg;
reg   [0:0] or_ln300_reg_1539_pp0_iter21_reg;
reg   [0:0] or_ln300_reg_1539_pp0_iter22_reg;
reg   [0:0] or_ln300_reg_1539_pp0_iter23_reg;
reg   [0:0] or_ln300_reg_1539_pp0_iter24_reg;
reg   [0:0] or_ln300_reg_1539_pp0_iter25_reg;
reg   [0:0] or_ln300_reg_1539_pp0_iter26_reg;
reg   [0:0] or_ln300_reg_1539_pp0_iter27_reg;
reg   [0:0] or_ln300_reg_1539_pp0_iter28_reg;
reg   [0:0] or_ln300_reg_1539_pp0_iter29_reg;
reg   [0:0] or_ln300_reg_1539_pp0_iter30_reg;
reg   [0:0] or_ln300_reg_1539_pp0_iter31_reg;
wire   [0:0] results_sign_V_1_fu_698_p2;
reg   [0:0] results_sign_V_1_reg_1545;
reg   [0:0] results_sign_V_1_reg_1545_pp0_iter10_reg;
reg   [0:0] results_sign_V_1_reg_1545_pp0_iter11_reg;
reg   [0:0] results_sign_V_1_reg_1545_pp0_iter12_reg;
reg   [0:0] results_sign_V_1_reg_1545_pp0_iter13_reg;
reg   [0:0] results_sign_V_1_reg_1545_pp0_iter14_reg;
reg   [0:0] results_sign_V_1_reg_1545_pp0_iter15_reg;
reg   [0:0] results_sign_V_1_reg_1545_pp0_iter16_reg;
reg   [0:0] results_sign_V_1_reg_1545_pp0_iter17_reg;
reg   [0:0] results_sign_V_1_reg_1545_pp0_iter18_reg;
reg   [0:0] results_sign_V_1_reg_1545_pp0_iter19_reg;
reg   [0:0] results_sign_V_1_reg_1545_pp0_iter20_reg;
reg   [0:0] results_sign_V_1_reg_1545_pp0_iter21_reg;
reg   [0:0] results_sign_V_1_reg_1545_pp0_iter22_reg;
reg   [0:0] results_sign_V_1_reg_1545_pp0_iter23_reg;
reg   [0:0] results_sign_V_1_reg_1545_pp0_iter24_reg;
reg   [0:0] results_sign_V_1_reg_1545_pp0_iter25_reg;
reg   [0:0] results_sign_V_1_reg_1545_pp0_iter26_reg;
reg   [0:0] results_sign_V_1_reg_1545_pp0_iter27_reg;
reg   [0:0] results_sign_V_1_reg_1545_pp0_iter28_reg;
reg   [0:0] results_sign_V_1_reg_1545_pp0_iter29_reg;
reg   [0:0] results_sign_V_1_reg_1545_pp0_iter30_reg;
reg   [0:0] results_sign_V_1_reg_1545_pp0_iter31_reg;
reg   [6:0] tmp_2_reg_1550;
reg   [6:0] tmp_2_reg_1550_pp0_iter11_reg;
reg   [6:0] tmp_2_reg_1550_pp0_iter12_reg;
reg   [6:0] tmp_2_reg_1550_pp0_iter13_reg;
wire   [55:0] B_V_fu_755_p1;
reg   [55:0] B_V_reg_1555;
reg   [55:0] B_V_reg_1555_pp0_iter11_reg;
reg   [55:0] B_V_reg_1555_pp0_iter12_reg;
reg   [55:0] B_V_reg_1555_pp0_iter13_reg;
reg   [55:0] B_V_reg_1555_pp0_iter14_reg;
reg   [55:0] B_V_reg_1555_pp0_iter15_reg;
reg   [48:0] B_trunc_reg_1560;
wire   [97:0] zext_ln1271_fu_769_p1;
reg   [97:0] zext_ln1271_reg_1565;
reg   [97:0] zext_ln1271_reg_1565_pp0_iter12_reg;
reg   [97:0] zext_ln1271_reg_1565_pp0_iter13_reg;
reg   [97:0] zext_ln1271_reg_1565_pp0_iter14_reg;
reg   [97:0] zext_ln1271_reg_1565_pp0_iter15_reg;
wire   [63:0] zext_ln541_fu_784_p1;
reg   [63:0] zext_ln541_reg_1572;
reg   [63:0] zext_ln541_reg_1572_pp0_iter15_reg;
reg   [63:0] zext_ln541_reg_1572_pp0_iter16_reg;
reg   [63:0] zext_ln541_reg_1572_pp0_iter17_reg;
reg   [63:0] zext_ln541_reg_1572_pp0_iter18_reg;
reg   [48:0] B_squared_V_reg_1589;
reg  signed [51:0] fourth_order_double_sin_cos_K1_V_load_reg_1595;
reg  signed [43:0] fourth_order_double_sin_cos_K2_V_load_reg_1600;
wire   [97:0] zext_ln818_fu_800_p1;
reg   [58:0] fourth_order_double_sin_cos_K0_V_load_reg_1647;
reg   [55:0] rhs_1_reg_1652;
reg   [47:0] rhs_2_reg_1657;
reg   [41:0] trunc_ln1_reg_1662;
reg   [32:0] fourth_order_double_sin_cos_K3_V_load_reg_1667;
reg   [34:0] trunc_ln1270_1_reg_1672;
reg   [24:0] fourth_order_double_sin_cos_K4_V_load_reg_1677;
wire   [63:0] ret_V_7_fu_925_p2;
reg   [63:0] ret_V_7_reg_1702;
reg   [63:0] ret_V_7_reg_1702_pp0_iter22_reg;
reg   [28:0] rhs_4_reg_1707;
reg   [36:0] trunc_ln2_reg_1712;
wire   [62:0] Mx_V_2_fu_951_p3;
reg   [62:0] Mx_V_2_reg_1717;
wire   [63:0] ret_V_fu_968_p2;
reg  signed [63:0] ret_V_reg_1722;
reg   [62:0] result_V_reg_1737;
reg   [15:0] p_Result_s_43_reg_1743;
reg   [15:0] p_Result_31_1_reg_1748;
reg   [15:0] p_Result_31_1_reg_1748_pp0_iter29_reg;
reg   [15:0] p_Result_31_2_reg_1753;
reg   [15:0] p_Result_31_2_reg_1753_pp0_iter29_reg;
reg   [14:0] tmp_5_reg_1758;
reg   [14:0] tmp_5_reg_1758_pp0_iter29_reg;
reg   [14:0] tmp_5_reg_1758_pp0_iter30_reg;
reg   [31:0] tmp_7_fu_1053_p3;
reg   [31:0] tmp_7_reg_1763;
reg   [31:0] tmp_7_reg_1763_pp0_iter30_reg;
wire   [62:0] shl_ln1454_fu_1065_p2;
reg   [62:0] shl_ln1454_reg_1769;
reg   [62:0] shl_ln1454_reg_1769_pp0_iter30_reg;
reg   [62:0] shl_ln1454_reg_1769_pp0_iter31_reg;
wire   [0:0] icmp_ln1653_fu_1070_p2;
reg   [0:0] icmp_ln1653_reg_1775;
reg   [0:0] icmp_ln1653_reg_1775_pp0_iter30_reg;
reg   [31:0] tmp_7_2_fu_1117_p3;
reg   [31:0] tmp_7_2_reg_1780;
wire   [0:0] icmp_ln453_fu_1125_p2;
reg   [0:0] icmp_ln453_reg_1785;
reg   [0:0] icmp_ln453_reg_1785_pp0_iter31_reg;
wire   [31:0] add_ln451_fu_1130_p2;
reg   [31:0] add_ln451_reg_1793;
wire   [62:0] shl_ln1454_1_fu_1140_p2;
reg   [62:0] shl_ln1454_1_reg_1798;
reg   [62:0] shl_ln1454_1_reg_1798_pp0_iter31_reg;
wire   [0:0] icmp_ln453_1_fu_1145_p2;
reg   [0:0] icmp_ln453_1_reg_1804;
wire   [31:0] add_ln451_1_fu_1151_p2;
reg   [31:0] add_ln451_1_reg_1810;
wire   [0:0] icmp_ln453_2_fu_1157_p2;
reg   [0:0] icmp_ln453_2_reg_1816;
reg   [31:0] tmp_7_3_fu_1186_p3;
reg   [31:0] tmp_7_3_reg_1821;
wire   [62:0] shl_ln1454_2_fu_1201_p2;
reg   [62:0] shl_ln1454_2_reg_1826;
wire   [0:0] and_ln453_2_fu_1225_p2;
reg   [0:0] and_ln453_2_reg_1832;
wire   [0:0] or_ln453_fu_1237_p2;
reg   [0:0] or_ln453_reg_1837;
wire   [0:0] or_ln462_fu_1280_p2;
reg   [0:0] or_ln462_reg_1842;
wire   [10:0] results_exp_V_fu_1304_p3;
reg   [10:0] results_exp_V_reg_1847;
wire   [63:0] zext_ln668_fu_354_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] data_V_fu_294_p1;
wire   [10:0] add_ln214_fu_330_p2;
wire   [10:0] addr_fu_336_p3;
wire   [3:0] tmp_fu_344_p4;
wire   [51:0] din_sig_V_fu_316_p1;
wire   [255:0] zext_ln930_fu_369_p1;
wire   [255:0] r_V_15_fu_372_p2;
wire   [52:0] p_Result_13_fu_387_p3;
wire   [52:0] grp_fu_398_p1;
wire   [0:0] tmp_4_fu_423_p3;
wire   [0:0] xor_ln1027_fu_430_p2;
wire   [0:0] p_Result_s_fu_435_p2;
wire   [123:0] Mx_bits_V_1_fu_441_p2;
wire   [60:0] tmp_1_fu_453_p4;
wire   [61:0] p_Result_14_fu_463_p3;
reg   [61:0] p_Result_2_fu_471_p4;
wire   [62:0] p_Result_15_fu_481_p3;
wire  signed [63:0] sext_ln1204_fu_489_p1;
reg   [63:0] tmp_s_fu_493_p3;
wire   [10:0] Ex_V_fu_505_p2;
wire   [123:0] zext_ln1454_fu_526_p1;
wire   [123:0] r_fu_529_p2;
wire   [10:0] select_ln482_fu_510_p3;
wire   [10:0] zext_ln841_fu_523_p1;
wire   [2:0] k_V_1_fu_517_p3;
wire   [3:0] p_Result_17_fu_580_p3;
wire   [0:0] tmp_8_fu_587_p18;
wire   [0:0] tmp_9_fu_625_p18;
wire   [0:0] icmp_ln1019_2_fu_681_p2;
wire   [0:0] results_sign_V_fu_663_p3;
wire   [0:0] xor_ln300_fu_692_p2;
wire  signed [11:0] sext_ln1535_fu_704_p1;
wire   [11:0] sub_ln1512_fu_707_p2;
wire   [11:0] ush_fu_713_p3;
wire  signed [31:0] sext_ln1488_fu_720_p1;
wire   [62:0] zext_ln1488_fu_724_p1;
wire   [62:0] r_V_fu_728_p2;
wire   [62:0] r_V_2_fu_733_p2;
wire   [62:0] r_V_16_fu_738_p3;
wire   [48:0] grp_fu_772_p0;
wire   [48:0] grp_fu_772_p1;
wire   [7:0] p_Result_16_fu_778_p3;
wire   [97:0] grp_fu_772_p2;
wire   [48:0] grp_fu_803_p0;
wire   [48:0] grp_fu_803_p1;
wire   [48:0] grp_fu_808_p0;
wire   [48:0] grp_fu_808_p1;
wire   [55:0] grp_fu_820_p0;
wire   [48:0] grp_fu_832_p0;
wire   [107:0] grp_fu_820_p2;
wire   [92:0] grp_fu_832_p2;
wire   [97:0] grp_fu_803_p2;
wire   [97:0] grp_fu_808_p2;
wire   [41:0] grp_fu_891_p0;
wire   [32:0] grp_fu_891_p1;
wire   [34:0] grp_fu_903_p0;
wire   [24:0] grp_fu_903_p1;
wire   [62:0] t1_V_fu_878_p3;
wire  signed [63:0] sext_ln813_fu_909_p1;
wire  signed [63:0] sext_ln813_1_fu_913_p1;
wire   [63:0] ret_V_6_fu_916_p2;
wire  signed [63:0] sext_ln1347_fu_922_p1;
wire   [59:0] grp_fu_903_p2;
wire   [74:0] grp_fu_891_p2;
wire   [63:0] zext_ln1347_fu_957_p1;
wire   [63:0] ret_V_8_fu_960_p2;
wire   [63:0] zext_ln1347_1_fu_965_p1;
wire   [62:0] grp_fu_980_p1;
wire   [125:0] grp_fu_980_p2;
wire   [31:0] p_Result_9_fu_1036_p3;
reg   [31:0] p_Result_1_fu_1043_p4;
wire   [62:0] zext_ln1488_1_fu_1061_p1;
wire   [31:0] p_Result_9_1_fu_1075_p3;
reg   [31:0] p_Result_34_1_fu_1089_p4;
wire   [31:0] p_Result_9_2_fu_1082_p3;
reg   [31:0] p_Result_34_2_fu_1107_p4;
reg   [31:0] tmp_7_1_fu_1099_p3;
wire   [62:0] zext_ln1488_2_fu_1136_p1;
wire   [31:0] p_Result_6_fu_1169_p3;
reg   [31:0] p_Result_34_3_fu_1176_p4;
wire   [10:0] Ex_V_4_fu_1163_p3;
wire   [62:0] zext_ln1488_3_fu_1198_p1;
wire   [0:0] xor_ln453_fu_1211_p2;
wire   [0:0] and_ln453_1_fu_1221_p2;
wire   [31:0] add_ln451_2_fu_1206_p2;
wire   [0:0] and_ln453_fu_1216_p2;
wire   [31:0] select_ln453_fu_1230_p3;
wire   [31:0] select_ln453_1_fu_1243_p3;
wire  signed [11:0] sext_ln186_fu_1194_p1;
wire   [11:0] add_ln461_fu_1256_p2;
wire  signed [31:0] sext_ln461_fu_1262_p1;
wire   [31:0] select_ln453_2_fu_1248_p3;
wire   [31:0] newexp_fu_1266_p2;
wire   [0:0] tmp_13_fu_1272_p3;
wire   [10:0] empty_fu_1285_p1;
wire   [10:0] select_ln300_fu_1289_p3;
wire   [10:0] select_ln300_1_fu_1296_p3;
wire   [62:0] zext_ln1488_4_fu_1311_p1;
wire   [62:0] shl_ln1454_3_fu_1314_p2;
wire   [51:0] tmp_3_fu_1319_p4;
wire   [51:0] tmp_6_fu_1329_p4;
wire   [51:0] tmp_10_fu_1345_p4;
wire   [51:0] tmp_11_fu_1354_p4;
wire   [51:0] select_ln453_3_fu_1338_p3;
wire   [51:0] select_ln453_4_fu_1363_p3;
wire   [0:0] and_ln300_2_fu_1377_p2;
wire   [0:0] xor_ln300_1_fu_1381_p2;
wire   [51:0] select_ln453_5_fu_1370_p3;
wire   [51:0] select_ln300_4_fu_1387_p3;
wire   [51:0] select_ln300_3_fu_1395_p3;
wire   [51:0] results_sig_V_fu_1402_p3;
wire   [63:0] p_Result_18_fu_1409_p4;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to31;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [169:0] grp_fu_398_p10;
wire   [107:0] grp_fu_820_p00;
wire   [92:0] grp_fu_832_p00;
wire   [74:0] grp_fu_891_p00;
wire   [74:0] grp_fu_891_p10;
wire   [59:0] grp_fu_903_p00;
wire   [59:0] grp_fu_903_p10;
wire   [125:0] grp_fu_980_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
end

clusterOp_sin_or_cos_double_s_ref_4oPi_table_256_V_ROM_AUTO_1R #(
    .DataWidth( 256 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
ref_4oPi_table_256_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ref_4oPi_table_256_V_address0),
    .ce0(ref_4oPi_table_256_V_ce0),
    .q0(ref_4oPi_table_256_V_q0)
);

clusterOp_sin_or_cos_double_s_fourth_order_double_sin_cos_K0_V_ROM_1P_LUTRAM_1R #(
    .DataWidth( 59 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_sin_cos_K0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_sin_cos_K0_V_address0),
    .ce0(fourth_order_double_sin_cos_K0_V_ce0),
    .q0(fourth_order_double_sin_cos_K0_V_q0)
);

clusterOp_sin_or_cos_double_s_fourth_order_double_sin_cos_K1_V_ROM_1P_LUTRAM_1R #(
    .DataWidth( 52 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_sin_cos_K1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_sin_cos_K1_V_address0),
    .ce0(fourth_order_double_sin_cos_K1_V_ce0),
    .q0(fourth_order_double_sin_cos_K1_V_q0)
);

clusterOp_sin_or_cos_double_s_fourth_order_double_sin_cos_K2_V_ROM_1P_LUTRAM_1R #(
    .DataWidth( 44 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_sin_cos_K2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_sin_cos_K2_V_address0),
    .ce0(fourth_order_double_sin_cos_K2_V_ce0),
    .q0(fourth_order_double_sin_cos_K2_V_q0)
);

clusterOp_sin_or_cos_double_s_fourth_order_double_sin_cos_K3_V_ROM_1P_LUTRAM_1R #(
    .DataWidth( 33 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_sin_cos_K3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_sin_cos_K3_V_address0),
    .ce0(fourth_order_double_sin_cos_K3_V_ce0),
    .q0(fourth_order_double_sin_cos_K3_V_q0)
);

clusterOp_sin_or_cos_double_s_fourth_order_double_sin_cos_K4_V_ROM_1P_LUTRAM_1R #(
    .DataWidth( 25 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
fourth_order_double_sin_cos_K4_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fourth_order_double_sin_cos_K4_V_address0),
    .ce0(fourth_order_double_sin_cos_K4_V_ce0),
    .q0(fourth_order_double_sin_cos_K4_V_q0)
);

clusterOp_mul_170s_53ns_170_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 170 ),
    .din1_WIDTH( 53 ),
    .dout_WIDTH( 170 ))
mul_170s_53ns_170_5_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(Med_V_reg_1466),
    .din1(grp_fu_398_p1),
    .ce(1'b1),
    .dout(grp_fu_398_p2)
);

clusterOp_mux_83_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
mux_83_1_1_1_U19(
    .din0(1'd0),
    .din1(1'd1),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd0),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(k_V_1_fu_517_p3),
    .dout(sin_basis_fu_558_p10)
);

clusterOp_mux_164_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
mux_164_1_1_1_U20(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd0),
    .din7(1'd1),
    .din8(1'd1),
    .din9(1'd0),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd0),
    .din13(1'd1),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_17_fu_580_p3),
    .dout(tmp_8_fu_587_p18)
);

clusterOp_mux_164_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
mux_164_1_1_1_U21(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(1'd1),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(1'd0),
    .din9(1'd1),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd1),
    .din13(1'd0),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_17_fu_580_p3),
    .dout(tmp_9_fu_625_p18)
);

clusterOp_mul_49ns_49ns_98_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 98 ))
mul_49ns_49ns_98_5_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_772_p0),
    .din1(grp_fu_772_p1),
    .ce(1'b1),
    .dout(grp_fu_772_p2)
);

clusterOp_mul_49ns_49ns_98_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 98 ))
mul_49ns_49ns_98_5_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_803_p0),
    .din1(grp_fu_803_p1),
    .ce(1'b1),
    .dout(grp_fu_803_p2)
);

clusterOp_mul_49ns_49ns_98_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 98 ))
mul_49ns_49ns_98_5_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_808_p0),
    .din1(grp_fu_808_p1),
    .ce(1'b1),
    .dout(grp_fu_808_p2)
);

clusterOp_mul_56ns_52s_108_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 56 ),
    .din1_WIDTH( 52 ),
    .dout_WIDTH( 108 ))
mul_56ns_52s_108_5_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_820_p0),
    .din1(fourth_order_double_sin_cos_K1_V_load_reg_1595),
    .ce(1'b1),
    .dout(grp_fu_820_p2)
);

clusterOp_mul_49ns_44s_93_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 44 ),
    .dout_WIDTH( 93 ))
mul_49ns_44s_93_5_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_832_p0),
    .din1(fourth_order_double_sin_cos_K2_V_load_reg_1600),
    .ce(1'b1),
    .dout(grp_fu_832_p2)
);

clusterOp_mul_42ns_33ns_75_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 42 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 75 ))
mul_42ns_33ns_75_2_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_891_p0),
    .din1(grp_fu_891_p1),
    .ce(1'b1),
    .dout(grp_fu_891_p2)
);

clusterOp_mul_35ns_25ns_60_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 35 ),
    .din1_WIDTH( 25 ),
    .dout_WIDTH( 60 ))
mul_35ns_25ns_60_2_1_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_903_p0),
    .din1(grp_fu_903_p1),
    .ce(1'b1),
    .dout(grp_fu_903_p2)
);

clusterOp_mul_64s_63ns_126_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 63 ),
    .dout_WIDTH( 126 ))
mul_64s_63ns_126_5_1_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ret_V_reg_1722),
    .din1(grp_fu_980_p1),
    .ce(1'b1),
    .dout(grp_fu_980_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        B_V_reg_1555 <= B_V_fu_755_p1;
        B_V_reg_1555_pp0_iter11_reg <= B_V_reg_1555;
        B_V_reg_1555_pp0_iter12_reg <= B_V_reg_1555_pp0_iter11_reg;
        B_V_reg_1555_pp0_iter13_reg <= B_V_reg_1555_pp0_iter12_reg;
        B_V_reg_1555_pp0_iter14_reg <= B_V_reg_1555_pp0_iter13_reg;
        B_V_reg_1555_pp0_iter15_reg <= B_V_reg_1555_pp0_iter14_reg;
        B_squared_V_reg_1589 <= {{grp_fu_772_p2[97:49]}};
        B_trunc_reg_1560 <= {{r_V_16_fu_738_p3[55:7]}};
        Ex_V_3_reg_1510 <= Ex_V_3_fu_544_p2;
        Ex_V_3_reg_1510_pp0_iter10_reg <= Ex_V_3_reg_1510;
        Ex_V_3_reg_1510_pp0_iter11_reg <= Ex_V_3_reg_1510_pp0_iter10_reg;
        Ex_V_3_reg_1510_pp0_iter12_reg <= Ex_V_3_reg_1510_pp0_iter11_reg;
        Ex_V_3_reg_1510_pp0_iter13_reg <= Ex_V_3_reg_1510_pp0_iter12_reg;
        Ex_V_3_reg_1510_pp0_iter14_reg <= Ex_V_3_reg_1510_pp0_iter13_reg;
        Ex_V_3_reg_1510_pp0_iter15_reg <= Ex_V_3_reg_1510_pp0_iter14_reg;
        Ex_V_3_reg_1510_pp0_iter16_reg <= Ex_V_3_reg_1510_pp0_iter15_reg;
        Ex_V_3_reg_1510_pp0_iter17_reg <= Ex_V_3_reg_1510_pp0_iter16_reg;
        Ex_V_3_reg_1510_pp0_iter18_reg <= Ex_V_3_reg_1510_pp0_iter17_reg;
        Ex_V_3_reg_1510_pp0_iter19_reg <= Ex_V_3_reg_1510_pp0_iter18_reg;
        Ex_V_3_reg_1510_pp0_iter20_reg <= Ex_V_3_reg_1510_pp0_iter19_reg;
        Ex_V_3_reg_1510_pp0_iter21_reg <= Ex_V_3_reg_1510_pp0_iter20_reg;
        Ex_V_3_reg_1510_pp0_iter22_reg <= Ex_V_3_reg_1510_pp0_iter21_reg;
        Ex_V_3_reg_1510_pp0_iter23_reg <= Ex_V_3_reg_1510_pp0_iter22_reg;
        Ex_V_3_reg_1510_pp0_iter24_reg <= Ex_V_3_reg_1510_pp0_iter23_reg;
        Ex_V_3_reg_1510_pp0_iter25_reg <= Ex_V_3_reg_1510_pp0_iter24_reg;
        Ex_V_3_reg_1510_pp0_iter26_reg <= Ex_V_3_reg_1510_pp0_iter25_reg;
        Ex_V_3_reg_1510_pp0_iter27_reg <= Ex_V_3_reg_1510_pp0_iter26_reg;
        Ex_V_3_reg_1510_pp0_iter28_reg <= Ex_V_3_reg_1510_pp0_iter27_reg;
        Ex_V_3_reg_1510_pp0_iter29_reg <= Ex_V_3_reg_1510_pp0_iter28_reg;
        Ex_V_3_reg_1510_pp0_iter30_reg <= Ex_V_3_reg_1510_pp0_iter29_reg;
        Med_V_reg_1466 <= {{r_V_15_fu_372_p2[255:86]}};
        Mx_V_2_reg_1717 <= Mx_V_2_fu_951_p3;
        Mx_V_reg_1503 <= {{r_fu_529_p2[123:61]}};
        Mx_V_reg_1503_pp0_iter10_reg <= Mx_V_reg_1503;
        Mx_V_reg_1503_pp0_iter11_reg <= Mx_V_reg_1503_pp0_iter10_reg;
        Mx_V_reg_1503_pp0_iter12_reg <= Mx_V_reg_1503_pp0_iter11_reg;
        Mx_V_reg_1503_pp0_iter13_reg <= Mx_V_reg_1503_pp0_iter12_reg;
        Mx_V_reg_1503_pp0_iter14_reg <= Mx_V_reg_1503_pp0_iter13_reg;
        Mx_V_reg_1503_pp0_iter15_reg <= Mx_V_reg_1503_pp0_iter14_reg;
        Mx_V_reg_1503_pp0_iter16_reg <= Mx_V_reg_1503_pp0_iter15_reg;
        Mx_V_reg_1503_pp0_iter17_reg <= Mx_V_reg_1503_pp0_iter16_reg;
        Mx_V_reg_1503_pp0_iter18_reg <= Mx_V_reg_1503_pp0_iter17_reg;
        Mx_V_reg_1503_pp0_iter19_reg <= Mx_V_reg_1503_pp0_iter18_reg;
        Mx_V_reg_1503_pp0_iter20_reg <= Mx_V_reg_1503_pp0_iter19_reg;
        Mx_V_reg_1503_pp0_iter21_reg <= Mx_V_reg_1503_pp0_iter20_reg;
        Mx_V_reg_1503_pp0_iter22_reg <= Mx_V_reg_1503_pp0_iter21_reg;
        Mx_bits_V_3_reg_1492 <= Mx_bits_V_3_fu_446_p3;
        Mx_bits_V_reg_1481 <= {{grp_fu_398_p2[166:43]}};
        Mx_zeros_reg_1497 <= Mx_zeros_fu_501_p1;
        add_ln451_1_reg_1810 <= add_ln451_1_fu_1151_p2;
        add_ln451_reg_1793 <= add_ln451_fu_1130_p2;
        and_ln300_reg_1534 <= and_ln300_fu_676_p2;
        and_ln300_reg_1534_pp0_iter10_reg <= and_ln300_reg_1534;
        and_ln300_reg_1534_pp0_iter11_reg <= and_ln300_reg_1534_pp0_iter10_reg;
        and_ln300_reg_1534_pp0_iter12_reg <= and_ln300_reg_1534_pp0_iter11_reg;
        and_ln300_reg_1534_pp0_iter13_reg <= and_ln300_reg_1534_pp0_iter12_reg;
        and_ln300_reg_1534_pp0_iter14_reg <= and_ln300_reg_1534_pp0_iter13_reg;
        and_ln300_reg_1534_pp0_iter15_reg <= and_ln300_reg_1534_pp0_iter14_reg;
        and_ln300_reg_1534_pp0_iter16_reg <= and_ln300_reg_1534_pp0_iter15_reg;
        and_ln300_reg_1534_pp0_iter17_reg <= and_ln300_reg_1534_pp0_iter16_reg;
        and_ln300_reg_1534_pp0_iter18_reg <= and_ln300_reg_1534_pp0_iter17_reg;
        and_ln300_reg_1534_pp0_iter19_reg <= and_ln300_reg_1534_pp0_iter18_reg;
        and_ln300_reg_1534_pp0_iter20_reg <= and_ln300_reg_1534_pp0_iter19_reg;
        and_ln300_reg_1534_pp0_iter21_reg <= and_ln300_reg_1534_pp0_iter20_reg;
        and_ln300_reg_1534_pp0_iter22_reg <= and_ln300_reg_1534_pp0_iter21_reg;
        and_ln300_reg_1534_pp0_iter23_reg <= and_ln300_reg_1534_pp0_iter22_reg;
        and_ln300_reg_1534_pp0_iter24_reg <= and_ln300_reg_1534_pp0_iter23_reg;
        and_ln300_reg_1534_pp0_iter25_reg <= and_ln300_reg_1534_pp0_iter24_reg;
        and_ln300_reg_1534_pp0_iter26_reg <= and_ln300_reg_1534_pp0_iter25_reg;
        and_ln300_reg_1534_pp0_iter27_reg <= and_ln300_reg_1534_pp0_iter26_reg;
        and_ln300_reg_1534_pp0_iter28_reg <= and_ln300_reg_1534_pp0_iter27_reg;
        and_ln300_reg_1534_pp0_iter29_reg <= and_ln300_reg_1534_pp0_iter28_reg;
        and_ln300_reg_1534_pp0_iter30_reg <= and_ln300_reg_1534_pp0_iter29_reg;
        and_ln453_2_reg_1832 <= and_ln453_2_fu_1225_p2;
        closepath_reg_1433_pp0_iter2_reg <= closepath_reg_1433_pp0_iter1_reg;
        closepath_reg_1433_pp0_iter3_reg <= closepath_reg_1433_pp0_iter2_reg;
        closepath_reg_1433_pp0_iter4_reg <= closepath_reg_1433_pp0_iter3_reg;
        closepath_reg_1433_pp0_iter5_reg <= closepath_reg_1433_pp0_iter4_reg;
        closepath_reg_1433_pp0_iter6_reg <= closepath_reg_1433_pp0_iter5_reg;
        closepath_reg_1433_pp0_iter7_reg <= closepath_reg_1433_pp0_iter6_reg;
        closepath_reg_1433_pp0_iter8_reg <= closepath_reg_1433_pp0_iter7_reg;
        din_exp_V_reg_1426_pp0_iter2_reg <= din_exp_V_reg_1426_pp0_iter1_reg;
        din_exp_V_reg_1426_pp0_iter3_reg <= din_exp_V_reg_1426_pp0_iter2_reg;
        din_exp_V_reg_1426_pp0_iter4_reg <= din_exp_V_reg_1426_pp0_iter3_reg;
        din_exp_V_reg_1426_pp0_iter5_reg <= din_exp_V_reg_1426_pp0_iter4_reg;
        din_exp_V_reg_1426_pp0_iter6_reg <= din_exp_V_reg_1426_pp0_iter5_reg;
        din_exp_V_reg_1426_pp0_iter7_reg <= din_exp_V_reg_1426_pp0_iter6_reg;
        din_exp_V_reg_1426_pp0_iter8_reg <= din_exp_V_reg_1426_pp0_iter7_reg;
        fourth_order_double_sin_cos_K0_V_load_reg_1647 <= fourth_order_double_sin_cos_K0_V_q0;
        fourth_order_double_sin_cos_K1_V_load_reg_1595 <= fourth_order_double_sin_cos_K1_V_q0;
        fourth_order_double_sin_cos_K2_V_load_reg_1600 <= fourth_order_double_sin_cos_K2_V_q0;
        fourth_order_double_sin_cos_K3_V_load_reg_1667 <= fourth_order_double_sin_cos_K3_V_q0;
        fourth_order_double_sin_cos_K4_V_load_reg_1677 <= fourth_order_double_sin_cos_K4_V_q0;
        icmp_ln1019_1_reg_1455_pp0_iter10_reg <= icmp_ln1019_1_reg_1455_pp0_iter9_reg;
        icmp_ln1019_1_reg_1455_pp0_iter11_reg <= icmp_ln1019_1_reg_1455_pp0_iter10_reg;
        icmp_ln1019_1_reg_1455_pp0_iter12_reg <= icmp_ln1019_1_reg_1455_pp0_iter11_reg;
        icmp_ln1019_1_reg_1455_pp0_iter13_reg <= icmp_ln1019_1_reg_1455_pp0_iter12_reg;
        icmp_ln1019_1_reg_1455_pp0_iter14_reg <= icmp_ln1019_1_reg_1455_pp0_iter13_reg;
        icmp_ln1019_1_reg_1455_pp0_iter15_reg <= icmp_ln1019_1_reg_1455_pp0_iter14_reg;
        icmp_ln1019_1_reg_1455_pp0_iter16_reg <= icmp_ln1019_1_reg_1455_pp0_iter15_reg;
        icmp_ln1019_1_reg_1455_pp0_iter17_reg <= icmp_ln1019_1_reg_1455_pp0_iter16_reg;
        icmp_ln1019_1_reg_1455_pp0_iter18_reg <= icmp_ln1019_1_reg_1455_pp0_iter17_reg;
        icmp_ln1019_1_reg_1455_pp0_iter19_reg <= icmp_ln1019_1_reg_1455_pp0_iter18_reg;
        icmp_ln1019_1_reg_1455_pp0_iter20_reg <= icmp_ln1019_1_reg_1455_pp0_iter19_reg;
        icmp_ln1019_1_reg_1455_pp0_iter21_reg <= icmp_ln1019_1_reg_1455_pp0_iter20_reg;
        icmp_ln1019_1_reg_1455_pp0_iter22_reg <= icmp_ln1019_1_reg_1455_pp0_iter21_reg;
        icmp_ln1019_1_reg_1455_pp0_iter23_reg <= icmp_ln1019_1_reg_1455_pp0_iter22_reg;
        icmp_ln1019_1_reg_1455_pp0_iter24_reg <= icmp_ln1019_1_reg_1455_pp0_iter23_reg;
        icmp_ln1019_1_reg_1455_pp0_iter25_reg <= icmp_ln1019_1_reg_1455_pp0_iter24_reg;
        icmp_ln1019_1_reg_1455_pp0_iter26_reg <= icmp_ln1019_1_reg_1455_pp0_iter25_reg;
        icmp_ln1019_1_reg_1455_pp0_iter27_reg <= icmp_ln1019_1_reg_1455_pp0_iter26_reg;
        icmp_ln1019_1_reg_1455_pp0_iter28_reg <= icmp_ln1019_1_reg_1455_pp0_iter27_reg;
        icmp_ln1019_1_reg_1455_pp0_iter29_reg <= icmp_ln1019_1_reg_1455_pp0_iter28_reg;
        icmp_ln1019_1_reg_1455_pp0_iter2_reg <= icmp_ln1019_1_reg_1455_pp0_iter1_reg;
        icmp_ln1019_1_reg_1455_pp0_iter30_reg <= icmp_ln1019_1_reg_1455_pp0_iter29_reg;
        icmp_ln1019_1_reg_1455_pp0_iter31_reg <= icmp_ln1019_1_reg_1455_pp0_iter30_reg;
        icmp_ln1019_1_reg_1455_pp0_iter3_reg <= icmp_ln1019_1_reg_1455_pp0_iter2_reg;
        icmp_ln1019_1_reg_1455_pp0_iter4_reg <= icmp_ln1019_1_reg_1455_pp0_iter3_reg;
        icmp_ln1019_1_reg_1455_pp0_iter5_reg <= icmp_ln1019_1_reg_1455_pp0_iter4_reg;
        icmp_ln1019_1_reg_1455_pp0_iter6_reg <= icmp_ln1019_1_reg_1455_pp0_iter5_reg;
        icmp_ln1019_1_reg_1455_pp0_iter7_reg <= icmp_ln1019_1_reg_1455_pp0_iter6_reg;
        icmp_ln1019_1_reg_1455_pp0_iter8_reg <= icmp_ln1019_1_reg_1455_pp0_iter7_reg;
        icmp_ln1019_1_reg_1455_pp0_iter9_reg <= icmp_ln1019_1_reg_1455_pp0_iter8_reg;
        icmp_ln1019_reg_1529 <= icmp_ln1019_fu_671_p2;
        icmp_ln1019_reg_1529_pp0_iter10_reg <= icmp_ln1019_reg_1529;
        icmp_ln1019_reg_1529_pp0_iter11_reg <= icmp_ln1019_reg_1529_pp0_iter10_reg;
        icmp_ln1019_reg_1529_pp0_iter12_reg <= icmp_ln1019_reg_1529_pp0_iter11_reg;
        icmp_ln1019_reg_1529_pp0_iter13_reg <= icmp_ln1019_reg_1529_pp0_iter12_reg;
        icmp_ln1019_reg_1529_pp0_iter14_reg <= icmp_ln1019_reg_1529_pp0_iter13_reg;
        icmp_ln1019_reg_1529_pp0_iter15_reg <= icmp_ln1019_reg_1529_pp0_iter14_reg;
        icmp_ln1019_reg_1529_pp0_iter16_reg <= icmp_ln1019_reg_1529_pp0_iter15_reg;
        icmp_ln1019_reg_1529_pp0_iter17_reg <= icmp_ln1019_reg_1529_pp0_iter16_reg;
        icmp_ln1019_reg_1529_pp0_iter18_reg <= icmp_ln1019_reg_1529_pp0_iter17_reg;
        icmp_ln1019_reg_1529_pp0_iter19_reg <= icmp_ln1019_reg_1529_pp0_iter18_reg;
        icmp_ln1019_reg_1529_pp0_iter20_reg <= icmp_ln1019_reg_1529_pp0_iter19_reg;
        icmp_ln1019_reg_1529_pp0_iter21_reg <= icmp_ln1019_reg_1529_pp0_iter20_reg;
        icmp_ln1019_reg_1529_pp0_iter22_reg <= icmp_ln1019_reg_1529_pp0_iter21_reg;
        icmp_ln1019_reg_1529_pp0_iter23_reg <= icmp_ln1019_reg_1529_pp0_iter22_reg;
        icmp_ln1019_reg_1529_pp0_iter24_reg <= icmp_ln1019_reg_1529_pp0_iter23_reg;
        icmp_ln1019_reg_1529_pp0_iter25_reg <= icmp_ln1019_reg_1529_pp0_iter24_reg;
        icmp_ln1019_reg_1529_pp0_iter26_reg <= icmp_ln1019_reg_1529_pp0_iter25_reg;
        icmp_ln1019_reg_1529_pp0_iter27_reg <= icmp_ln1019_reg_1529_pp0_iter26_reg;
        icmp_ln1019_reg_1529_pp0_iter28_reg <= icmp_ln1019_reg_1529_pp0_iter27_reg;
        icmp_ln1019_reg_1529_pp0_iter29_reg <= icmp_ln1019_reg_1529_pp0_iter28_reg;
        icmp_ln1019_reg_1529_pp0_iter30_reg <= icmp_ln1019_reg_1529_pp0_iter29_reg;
        icmp_ln1019_reg_1529_pp0_iter31_reg <= icmp_ln1019_reg_1529_pp0_iter30_reg;
        icmp_ln1653_reg_1775 <= icmp_ln1653_fu_1070_p2;
        icmp_ln1653_reg_1775_pp0_iter30_reg <= icmp_ln1653_reg_1775;
        icmp_ln453_1_reg_1804 <= icmp_ln453_1_fu_1145_p2;
        icmp_ln453_2_reg_1816 <= icmp_ln453_2_fu_1157_p2;
        icmp_ln453_reg_1785 <= icmp_ln453_fu_1125_p2;
        icmp_ln453_reg_1785_pp0_iter31_reg <= icmp_ln453_reg_1785;
        isNeg_reg_1516 <= Ex_V_3_fu_544_p2[32'd10];
        k_V_reg_1487_pp0_iter8_reg <= k_V_reg_1487;
        or_ln300_reg_1539 <= or_ln300_fu_686_p2;
        or_ln300_reg_1539_pp0_iter10_reg <= or_ln300_reg_1539;
        or_ln300_reg_1539_pp0_iter11_reg <= or_ln300_reg_1539_pp0_iter10_reg;
        or_ln300_reg_1539_pp0_iter12_reg <= or_ln300_reg_1539_pp0_iter11_reg;
        or_ln300_reg_1539_pp0_iter13_reg <= or_ln300_reg_1539_pp0_iter12_reg;
        or_ln300_reg_1539_pp0_iter14_reg <= or_ln300_reg_1539_pp0_iter13_reg;
        or_ln300_reg_1539_pp0_iter15_reg <= or_ln300_reg_1539_pp0_iter14_reg;
        or_ln300_reg_1539_pp0_iter16_reg <= or_ln300_reg_1539_pp0_iter15_reg;
        or_ln300_reg_1539_pp0_iter17_reg <= or_ln300_reg_1539_pp0_iter16_reg;
        or_ln300_reg_1539_pp0_iter18_reg <= or_ln300_reg_1539_pp0_iter17_reg;
        or_ln300_reg_1539_pp0_iter19_reg <= or_ln300_reg_1539_pp0_iter18_reg;
        or_ln300_reg_1539_pp0_iter20_reg <= or_ln300_reg_1539_pp0_iter19_reg;
        or_ln300_reg_1539_pp0_iter21_reg <= or_ln300_reg_1539_pp0_iter20_reg;
        or_ln300_reg_1539_pp0_iter22_reg <= or_ln300_reg_1539_pp0_iter21_reg;
        or_ln300_reg_1539_pp0_iter23_reg <= or_ln300_reg_1539_pp0_iter22_reg;
        or_ln300_reg_1539_pp0_iter24_reg <= or_ln300_reg_1539_pp0_iter23_reg;
        or_ln300_reg_1539_pp0_iter25_reg <= or_ln300_reg_1539_pp0_iter24_reg;
        or_ln300_reg_1539_pp0_iter26_reg <= or_ln300_reg_1539_pp0_iter25_reg;
        or_ln300_reg_1539_pp0_iter27_reg <= or_ln300_reg_1539_pp0_iter26_reg;
        or_ln300_reg_1539_pp0_iter28_reg <= or_ln300_reg_1539_pp0_iter27_reg;
        or_ln300_reg_1539_pp0_iter29_reg <= or_ln300_reg_1539_pp0_iter28_reg;
        or_ln300_reg_1539_pp0_iter30_reg <= or_ln300_reg_1539_pp0_iter29_reg;
        or_ln300_reg_1539_pp0_iter31_reg <= or_ln300_reg_1539_pp0_iter30_reg;
        or_ln453_reg_1837 <= or_ln453_fu_1237_p2;
        or_ln462_reg_1842 <= or_ln462_fu_1280_p2;
        p_Result_11_reg_1421_pp0_iter2_reg <= p_Result_11_reg_1421_pp0_iter1_reg;
        p_Result_11_reg_1421_pp0_iter3_reg <= p_Result_11_reg_1421_pp0_iter2_reg;
        p_Result_11_reg_1421_pp0_iter4_reg <= p_Result_11_reg_1421_pp0_iter3_reg;
        p_Result_11_reg_1421_pp0_iter5_reg <= p_Result_11_reg_1421_pp0_iter4_reg;
        p_Result_11_reg_1421_pp0_iter6_reg <= p_Result_11_reg_1421_pp0_iter5_reg;
        p_Result_11_reg_1421_pp0_iter7_reg <= p_Result_11_reg_1421_pp0_iter6_reg;
        p_Result_11_reg_1421_pp0_iter8_reg <= p_Result_11_reg_1421_pp0_iter7_reg;
        p_Result_12_reg_1440_pp0_iter2_reg <= p_Result_12_reg_1440_pp0_iter1_reg;
        p_Result_31_1_reg_1748 <= {{grp_fu_980_p2[109:94]}};
        p_Result_31_1_reg_1748_pp0_iter29_reg <= p_Result_31_1_reg_1748;
        p_Result_31_2_reg_1753 <= {{grp_fu_980_p2[93:78]}};
        p_Result_31_2_reg_1753_pp0_iter29_reg <= p_Result_31_2_reg_1753;
        p_Result_s_43_reg_1743 <= {{grp_fu_980_p2[125:110]}};
        result_V_reg_1737 <= {{grp_fu_980_p2[125:63]}};
        results_exp_V_reg_1847 <= results_exp_V_fu_1304_p3;
        results_sign_V_1_reg_1545 <= results_sign_V_1_fu_698_p2;
        results_sign_V_1_reg_1545_pp0_iter10_reg <= results_sign_V_1_reg_1545;
        results_sign_V_1_reg_1545_pp0_iter11_reg <= results_sign_V_1_reg_1545_pp0_iter10_reg;
        results_sign_V_1_reg_1545_pp0_iter12_reg <= results_sign_V_1_reg_1545_pp0_iter11_reg;
        results_sign_V_1_reg_1545_pp0_iter13_reg <= results_sign_V_1_reg_1545_pp0_iter12_reg;
        results_sign_V_1_reg_1545_pp0_iter14_reg <= results_sign_V_1_reg_1545_pp0_iter13_reg;
        results_sign_V_1_reg_1545_pp0_iter15_reg <= results_sign_V_1_reg_1545_pp0_iter14_reg;
        results_sign_V_1_reg_1545_pp0_iter16_reg <= results_sign_V_1_reg_1545_pp0_iter15_reg;
        results_sign_V_1_reg_1545_pp0_iter17_reg <= results_sign_V_1_reg_1545_pp0_iter16_reg;
        results_sign_V_1_reg_1545_pp0_iter18_reg <= results_sign_V_1_reg_1545_pp0_iter17_reg;
        results_sign_V_1_reg_1545_pp0_iter19_reg <= results_sign_V_1_reg_1545_pp0_iter18_reg;
        results_sign_V_1_reg_1545_pp0_iter20_reg <= results_sign_V_1_reg_1545_pp0_iter19_reg;
        results_sign_V_1_reg_1545_pp0_iter21_reg <= results_sign_V_1_reg_1545_pp0_iter20_reg;
        results_sign_V_1_reg_1545_pp0_iter22_reg <= results_sign_V_1_reg_1545_pp0_iter21_reg;
        results_sign_V_1_reg_1545_pp0_iter23_reg <= results_sign_V_1_reg_1545_pp0_iter22_reg;
        results_sign_V_1_reg_1545_pp0_iter24_reg <= results_sign_V_1_reg_1545_pp0_iter23_reg;
        results_sign_V_1_reg_1545_pp0_iter25_reg <= results_sign_V_1_reg_1545_pp0_iter24_reg;
        results_sign_V_1_reg_1545_pp0_iter26_reg <= results_sign_V_1_reg_1545_pp0_iter25_reg;
        results_sign_V_1_reg_1545_pp0_iter27_reg <= results_sign_V_1_reg_1545_pp0_iter26_reg;
        results_sign_V_1_reg_1545_pp0_iter28_reg <= results_sign_V_1_reg_1545_pp0_iter27_reg;
        results_sign_V_1_reg_1545_pp0_iter29_reg <= results_sign_V_1_reg_1545_pp0_iter28_reg;
        results_sign_V_1_reg_1545_pp0_iter30_reg <= results_sign_V_1_reg_1545_pp0_iter29_reg;
        results_sign_V_1_reg_1545_pp0_iter31_reg <= results_sign_V_1_reg_1545_pp0_iter30_reg;
        ret_V_5_reg_1476 <= grp_fu_398_p2;
        ret_V_7_reg_1702 <= ret_V_7_fu_925_p2;
        ret_V_7_reg_1702_pp0_iter22_reg <= ret_V_7_reg_1702;
        ret_V_reg_1722 <= ret_V_fu_968_p2;
        rhs_1_reg_1652 <= {{grp_fu_820_p2[107:52]}};
        rhs_2_reg_1657 <= {{grp_fu_832_p2[92:45]}};
        rhs_4_reg_1707 <= {{grp_fu_903_p2[59:31]}};
        shl_ln1454_1_reg_1798_pp0_iter31_reg <= shl_ln1454_1_reg_1798;
        shl_ln1454_reg_1769_pp0_iter30_reg <= shl_ln1454_reg_1769;
        shl_ln1454_reg_1769_pp0_iter31_reg <= shl_ln1454_reg_1769_pp0_iter30_reg;
        sin_basis_reg_1522 <= sin_basis_fu_558_p10;
        sin_basis_reg_1522_pp0_iter10_reg <= sin_basis_reg_1522;
        sin_basis_reg_1522_pp0_iter11_reg <= sin_basis_reg_1522_pp0_iter10_reg;
        sin_basis_reg_1522_pp0_iter12_reg <= sin_basis_reg_1522_pp0_iter11_reg;
        sin_basis_reg_1522_pp0_iter13_reg <= sin_basis_reg_1522_pp0_iter12_reg;
        sin_basis_reg_1522_pp0_iter14_reg <= sin_basis_reg_1522_pp0_iter13_reg;
        sin_basis_reg_1522_pp0_iter15_reg <= sin_basis_reg_1522_pp0_iter14_reg;
        sin_basis_reg_1522_pp0_iter16_reg <= sin_basis_reg_1522_pp0_iter15_reg;
        sin_basis_reg_1522_pp0_iter17_reg <= sin_basis_reg_1522_pp0_iter16_reg;
        sin_basis_reg_1522_pp0_iter18_reg <= sin_basis_reg_1522_pp0_iter17_reg;
        sin_basis_reg_1522_pp0_iter19_reg <= sin_basis_reg_1522_pp0_iter18_reg;
        sin_basis_reg_1522_pp0_iter20_reg <= sin_basis_reg_1522_pp0_iter19_reg;
        sin_basis_reg_1522_pp0_iter21_reg <= sin_basis_reg_1522_pp0_iter20_reg;
        sin_basis_reg_1522_pp0_iter22_reg <= sin_basis_reg_1522_pp0_iter21_reg;
        sin_basis_reg_1522_pp0_iter23_reg <= sin_basis_reg_1522_pp0_iter22_reg;
        sin_basis_reg_1522_pp0_iter24_reg <= sin_basis_reg_1522_pp0_iter23_reg;
        sin_basis_reg_1522_pp0_iter25_reg <= sin_basis_reg_1522_pp0_iter24_reg;
        sin_basis_reg_1522_pp0_iter26_reg <= sin_basis_reg_1522_pp0_iter25_reg;
        sin_basis_reg_1522_pp0_iter27_reg <= sin_basis_reg_1522_pp0_iter26_reg;
        sin_basis_reg_1522_pp0_iter28_reg <= sin_basis_reg_1522_pp0_iter27_reg;
        sin_basis_reg_1522_pp0_iter29_reg <= sin_basis_reg_1522_pp0_iter28_reg;
        sin_basis_reg_1522_pp0_iter30_reg <= sin_basis_reg_1522_pp0_iter29_reg;
        tmp_2_reg_1550 <= {{r_V_16_fu_738_p3[62:56]}};
        tmp_2_reg_1550_pp0_iter11_reg <= tmp_2_reg_1550;
        tmp_2_reg_1550_pp0_iter12_reg <= tmp_2_reg_1550_pp0_iter11_reg;
        tmp_2_reg_1550_pp0_iter13_reg <= tmp_2_reg_1550_pp0_iter12_reg;
        tmp_5_reg_1758 <= {{grp_fu_980_p2[77:63]}};
        tmp_5_reg_1758_pp0_iter29_reg <= tmp_5_reg_1758;
        tmp_5_reg_1758_pp0_iter30_reg <= tmp_5_reg_1758_pp0_iter29_reg;
        tmp_7_2_reg_1780 <= tmp_7_2_fu_1117_p3;
        tmp_7_3_reg_1821 <= tmp_7_3_fu_1186_p3;
        tmp_7_reg_1763 <= tmp_7_fu_1053_p3;
        tmp_7_reg_1763_pp0_iter30_reg <= tmp_7_reg_1763;
        trunc_ln1270_1_reg_1672 <= {{grp_fu_808_p2[97:63]}};
        trunc_ln1_reg_1662 <= {{grp_fu_803_p2[97:56]}};
        trunc_ln2_reg_1712 <= {{grp_fu_891_p2[74:38]}};
        zext_ln1271_reg_1565[48 : 0] <= zext_ln1271_fu_769_p1[48 : 0];
        zext_ln1271_reg_1565_pp0_iter12_reg[48 : 0] <= zext_ln1271_reg_1565[48 : 0];
        zext_ln1271_reg_1565_pp0_iter13_reg[48 : 0] <= zext_ln1271_reg_1565_pp0_iter12_reg[48 : 0];
        zext_ln1271_reg_1565_pp0_iter14_reg[48 : 0] <= zext_ln1271_reg_1565_pp0_iter13_reg[48 : 0];
        zext_ln1271_reg_1565_pp0_iter15_reg[48 : 0] <= zext_ln1271_reg_1565_pp0_iter14_reg[48 : 0];
        zext_ln541_reg_1572[7 : 0] <= zext_ln541_fu_784_p1[7 : 0];
        zext_ln541_reg_1572_pp0_iter15_reg[7 : 0] <= zext_ln541_reg_1572[7 : 0];
        zext_ln541_reg_1572_pp0_iter16_reg[7 : 0] <= zext_ln541_reg_1572_pp0_iter15_reg[7 : 0];
        zext_ln541_reg_1572_pp0_iter17_reg[7 : 0] <= zext_ln541_reg_1572_pp0_iter16_reg[7 : 0];
        zext_ln541_reg_1572_pp0_iter18_reg[7 : 0] <= zext_ln541_reg_1572_pp0_iter17_reg[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        closepath_reg_1433 <= closepath_fu_320_p2;
        closepath_reg_1433_pp0_iter1_reg <= closepath_reg_1433;
        din_exp_V_reg_1426 <= {{data_V_fu_294_p1[62:52]}};
        din_exp_V_reg_1426_pp0_iter1_reg <= din_exp_V_reg_1426;
        icmp_ln1019_1_reg_1455 <= icmp_ln1019_1_fu_363_p2;
        icmp_ln1019_1_reg_1455_pp0_iter1_reg <= icmp_ln1019_1_reg_1455;
        p_Result_11_reg_1421 <= data_V_fu_294_p1[32'd63];
        p_Result_11_reg_1421_pp0_iter1_reg <= p_Result_11_reg_1421;
        p_Result_12_reg_1440 <= p_Result_12_fu_326_p1;
        p_Result_12_reg_1440_pp0_iter1_reg <= p_Result_12_reg_1440;
        table_256_V_reg_1461 <= ref_4oPi_table_256_V_q0;
        trunc_ln628_reg_1450 <= trunc_ln628_fu_359_p1;
        trunc_ln628_reg_1450_pp0_iter1_reg <= trunc_ln628_reg_1450;
    end
end

always @ (posedge ap_clk) begin
    if (((closepath_reg_1433_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_V_reg_1487 <= {{grp_fu_398_p2[169:167]}};
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln300_reg_1539_pp0_iter29_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        shl_ln1454_1_reg_1798 <= shl_ln1454_1_fu_1140_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln300_reg_1539_pp0_iter30_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        shl_ln1454_2_reg_1826 <= shl_ln1454_2_fu_1201_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln300_reg_1539_pp0_iter28_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        shl_ln1454_reg_1769 <= shl_ln1454_fu_1065_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter32 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0_0to31 = 1'b1;
    end else begin
        ap_idle_pp0_0to31 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to31 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fourth_order_double_sin_cos_K0_V_ce0 = 1'b1;
    end else begin
        fourth_order_double_sin_cos_K0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fourth_order_double_sin_cos_K1_V_ce0 = 1'b1;
    end else begin
        fourth_order_double_sin_cos_K1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fourth_order_double_sin_cos_K2_V_ce0 = 1'b1;
    end else begin
        fourth_order_double_sin_cos_K2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fourth_order_double_sin_cos_K3_V_ce0 = 1'b1;
    end else begin
        fourth_order_double_sin_cos_K3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fourth_order_double_sin_cos_K4_V_ce0 = 1'b1;
    end else begin
        fourth_order_double_sin_cos_K4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ref_4oPi_table_256_V_ce0 = 1'b1;
    end else begin
        ref_4oPi_table_256_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_V_fu_755_p1 = r_V_16_fu_738_p3[55:0];

assign Ex_V_3_fu_544_p2 = (select_ln482_fu_510_p3 - zext_ln841_fu_523_p1);

assign Ex_V_4_fu_1163_p3 = ((sin_basis_reg_1522_pp0_iter30_reg[0:0] == 1'b1) ? Ex_V_3_reg_1510_pp0_iter30_reg : 11'd0);

assign Ex_V_fu_505_p2 = ($signed(din_exp_V_reg_1426_pp0_iter8_reg) + $signed(11'd1027));

assign Mx_V_2_fu_951_p3 = ((sin_basis_reg_1522_pp0_iter22_reg[0:0] == 1'b1) ? Mx_V_reg_1503_pp0_iter22_reg : 63'd9223372036854775807);

assign Mx_bits_V_1_fu_441_p2 = (124'd0 - Mx_bits_V_reg_1481);

assign Mx_bits_V_3_fu_446_p3 = ((p_Result_s_fu_435_p2[0:0] == 1'b1) ? Mx_bits_V_1_fu_441_p2 : Mx_bits_V_reg_1481);

assign Mx_zeros_fu_501_p1 = tmp_s_fu_493_p3[6:0];

assign add_ln214_fu_330_p2 = ($signed(din_exp_V_fu_306_p4) + $signed(11'd1101));

assign add_ln451_1_fu_1151_p2 = (tmp_7_2_fu_1117_p3 + add_ln451_fu_1130_p2);

assign add_ln451_2_fu_1206_p2 = (tmp_7_3_fu_1186_p3 + add_ln451_1_reg_1810);

assign add_ln451_fu_1130_p2 = (tmp_7_1_fu_1099_p3 + 32'd16);

assign add_ln461_fu_1256_p2 = ($signed(sext_ln186_fu_1194_p1) + $signed(12'd1023));

assign addr_fu_336_p3 = ((closepath_fu_320_p2[0:0] == 1'b1) ? 11'd74 : add_ln214_fu_330_p2);

assign and_ln300_2_fu_1377_p2 = (icmp_ln1019_reg_1529_pp0_iter31_reg & icmp_ln1019_1_reg_1455_pp0_iter31_reg);

assign and_ln300_fu_676_p2 = (icmp_ln1019_fu_671_p2 & icmp_ln1019_1_reg_1455_pp0_iter8_reg);

assign and_ln453_1_fu_1221_p2 = (icmp_ln453_2_reg_1816 & icmp_ln453_1_reg_1804);

assign and_ln453_2_fu_1225_p2 = (icmp_ln453_reg_1785 & and_ln453_1_fu_1221_p2);

assign and_ln453_fu_1216_p2 = (xor_ln453_fu_1211_p2 & icmp_ln453_reg_1785);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = p_Result_18_fu_1409_p4;

assign closepath_fu_320_p2 = ((din_exp_V_fu_306_p4 < 11'd1022) ? 1'b1 : 1'b0);

assign data_V_fu_294_p1 = t_in;

assign din_exp_V_fu_306_p4 = {{data_V_fu_294_p1[62:52]}};

assign din_sig_V_fu_316_p1 = data_V_fu_294_p1[51:0];

assign empty_fu_1285_p1 = newexp_fu_1266_p2[10:0];

assign fourth_order_double_sin_cos_K0_V_address0 = zext_ln541_reg_1572_pp0_iter18_reg;

assign fourth_order_double_sin_cos_K1_V_address0 = zext_ln541_fu_784_p1;

assign fourth_order_double_sin_cos_K2_V_address0 = zext_ln541_fu_784_p1;

assign fourth_order_double_sin_cos_K3_V_address0 = zext_ln541_reg_1572_pp0_iter18_reg;

assign fourth_order_double_sin_cos_K4_V_address0 = zext_ln541_reg_1572_pp0_iter18_reg;

assign grp_fu_398_p1 = grp_fu_398_p10;

assign grp_fu_398_p10 = p_Result_13_fu_387_p3;

assign grp_fu_772_p0 = zext_ln1271_fu_769_p1;

assign grp_fu_772_p1 = zext_ln1271_fu_769_p1;

assign grp_fu_803_p0 = zext_ln818_fu_800_p1;

assign grp_fu_803_p1 = zext_ln1271_reg_1565_pp0_iter15_reg;

assign grp_fu_808_p0 = zext_ln818_fu_800_p1;

assign grp_fu_808_p1 = zext_ln818_fu_800_p1;

assign grp_fu_820_p0 = grp_fu_820_p00;

assign grp_fu_820_p00 = B_V_reg_1555_pp0_iter15_reg;

assign grp_fu_832_p0 = grp_fu_832_p00;

assign grp_fu_832_p00 = B_squared_V_reg_1589;

assign grp_fu_891_p0 = grp_fu_891_p00;

assign grp_fu_891_p00 = trunc_ln1_reg_1662;

assign grp_fu_891_p1 = grp_fu_891_p10;

assign grp_fu_891_p10 = fourth_order_double_sin_cos_K3_V_load_reg_1667;

assign grp_fu_903_p0 = grp_fu_903_p00;

assign grp_fu_903_p00 = trunc_ln1270_1_reg_1672;

assign grp_fu_903_p1 = grp_fu_903_p10;

assign grp_fu_903_p10 = fourth_order_double_sin_cos_K4_V_load_reg_1677;

assign grp_fu_980_p1 = grp_fu_980_p10;

assign grp_fu_980_p10 = Mx_V_2_reg_1717;

assign icmp_ln1019_1_fu_363_p2 = ((din_sig_V_fu_316_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln1019_2_fu_681_p2 = ((din_exp_V_reg_1426_pp0_iter8_reg == 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln1019_fu_671_p2 = ((din_exp_V_reg_1426_pp0_iter8_reg == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln1653_fu_1070_p2 = ((result_V_reg_1737 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln453_1_fu_1145_p2 = ((tmp_7_1_fu_1099_p3 == 32'd16) ? 1'b1 : 1'b0);

assign icmp_ln453_2_fu_1157_p2 = ((tmp_7_2_fu_1117_p3 == 32'd16) ? 1'b1 : 1'b0);

assign icmp_ln453_fu_1125_p2 = ((tmp_7_reg_1763 == 32'd16) ? 1'b1 : 1'b0);

assign k_V_1_fu_517_p3 = ((closepath_reg_1433_pp0_iter8_reg[0:0] == 1'b1) ? 3'd0 : k_V_reg_1487_pp0_iter8_reg);

assign newexp_fu_1266_p2 = ($signed(sext_ln461_fu_1262_p1) - $signed(select_ln453_2_fu_1248_p3));

assign or_ln300_fu_686_p2 = (icmp_ln1019_2_fu_681_p2 | and_ln300_fu_676_p2);

assign or_ln453_fu_1237_p2 = (and_ln453_fu_1216_p2 | and_ln453_2_fu_1225_p2);

assign or_ln462_fu_1280_p2 = (tmp_13_fu_1272_p3 | icmp_ln1653_reg_1775_pp0_iter30_reg);

assign p_Result_12_fu_326_p1 = data_V_fu_294_p1[51:0];

assign p_Result_13_fu_387_p3 = {{1'd1}, {p_Result_12_reg_1440_pp0_iter2_reg}};

assign p_Result_14_fu_463_p3 = {{tmp_1_fu_453_p4}, {1'd1}};

assign p_Result_15_fu_481_p3 = {{1'd1}, {p_Result_2_fu_471_p4}};

assign p_Result_16_fu_778_p3 = {{sin_basis_reg_1522_pp0_iter13_reg}, {tmp_2_reg_1550_pp0_iter13_reg}};

assign p_Result_17_fu_580_p3 = {{p_Result_11_reg_1421_pp0_iter8_reg}, {k_V_1_fu_517_p3}};

assign p_Result_18_fu_1409_p4 = {{{results_sign_V_1_reg_1545_pp0_iter31_reg}, {results_exp_V_reg_1847}}, {results_sig_V_fu_1402_p3}};

integer ap_tvar_int_0;

always @ (p_Result_9_fu_1036_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_1_fu_1043_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_1_fu_1043_p4[ap_tvar_int_0] = p_Result_9_fu_1036_p3[31 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (p_Result_14_fu_463_p3) begin
    for (ap_tvar_int_1 = 62 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 61 - 0) begin
            p_Result_2_fu_471_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_2_fu_471_p4[ap_tvar_int_1] = p_Result_14_fu_463_p3[61 - ap_tvar_int_1];
        end
    end
end

integer ap_tvar_int_2;

always @ (p_Result_9_1_fu_1075_p3) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            p_Result_34_1_fu_1089_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            p_Result_34_1_fu_1089_p4[ap_tvar_int_2] = p_Result_9_1_fu_1075_p3[31 - ap_tvar_int_2];
        end
    end
end

integer ap_tvar_int_3;

always @ (p_Result_9_2_fu_1082_p3) begin
    for (ap_tvar_int_3 = 32 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > 31 - 0) begin
            p_Result_34_2_fu_1107_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            p_Result_34_2_fu_1107_p4[ap_tvar_int_3] = p_Result_9_2_fu_1082_p3[31 - ap_tvar_int_3];
        end
    end
end

integer ap_tvar_int_4;

always @ (p_Result_6_fu_1169_p3) begin
    for (ap_tvar_int_4 = 32 - 1; ap_tvar_int_4 >= 0; ap_tvar_int_4 = ap_tvar_int_4 - 1) begin
        if (ap_tvar_int_4 > 31 - 0) begin
            p_Result_34_3_fu_1176_p4[ap_tvar_int_4] = 1'b0;
        end else begin
            p_Result_34_3_fu_1176_p4[ap_tvar_int_4] = p_Result_6_fu_1169_p3[31 - ap_tvar_int_4];
        end
    end
end

assign p_Result_6_fu_1169_p3 = {{tmp_5_reg_1758_pp0_iter30_reg}, {17'd65536}};

assign p_Result_9_1_fu_1075_p3 = {{p_Result_31_1_reg_1748_pp0_iter29_reg}, {16'd32768}};

assign p_Result_9_2_fu_1082_p3 = {{p_Result_31_2_reg_1753_pp0_iter29_reg}, {16'd32768}};

assign p_Result_9_fu_1036_p3 = {{p_Result_s_43_reg_1743}, {16'd32768}};

assign p_Result_s_fu_435_p2 = (xor_ln1027_fu_430_p2 & tmp_4_fu_423_p3);

assign r_V_15_fu_372_p2 = table_256_V_reg_1461 << zext_ln930_fu_369_p1;

assign r_V_16_fu_738_p3 = ((isNeg_reg_1516[0:0] == 1'b1) ? r_V_fu_728_p2 : r_V_2_fu_733_p2);

assign r_V_2_fu_733_p2 = Mx_V_reg_1503 << zext_ln1488_fu_724_p1;

assign r_V_fu_728_p2 = Mx_V_reg_1503 >> zext_ln1488_fu_724_p1;

assign r_fu_529_p2 = Mx_bits_V_3_reg_1492 << zext_ln1454_fu_526_p1;

assign ref_4oPi_table_256_V_address0 = zext_ln668_fu_354_p1;

assign results_exp_V_fu_1304_p3 = ((or_ln300_reg_1539_pp0_iter30_reg[0:0] == 1'b1) ? select_ln300_fu_1289_p3 : select_ln300_1_fu_1296_p3);

assign results_sig_V_fu_1402_p3 = ((or_ln300_reg_1539_pp0_iter31_reg[0:0] == 1'b1) ? select_ln300_4_fu_1387_p3 : select_ln300_3_fu_1395_p3);

assign results_sign_V_1_fu_698_p2 = (xor_ln300_fu_692_p2 & results_sign_V_fu_663_p3);

assign results_sign_V_fu_663_p3 = ((sin_basis_fu_558_p10[0:0] == 1'b1) ? tmp_8_fu_587_p18 : tmp_9_fu_625_p18);

assign ret_V_6_fu_916_p2 = ($signed(sext_ln813_fu_909_p1) + $signed(sext_ln813_1_fu_913_p1));

assign ret_V_7_fu_925_p2 = ($signed(ret_V_6_fu_916_p2) + $signed(sext_ln1347_fu_922_p1));

assign ret_V_8_fu_960_p2 = (ret_V_7_reg_1702_pp0_iter22_reg + zext_ln1347_fu_957_p1);

assign ret_V_fu_968_p2 = (ret_V_8_fu_960_p2 + zext_ln1347_1_fu_965_p1);

assign select_ln300_1_fu_1296_p3 = ((or_ln462_fu_1280_p2[0:0] == 1'b1) ? 11'd0 : empty_fu_1285_p1);

assign select_ln300_3_fu_1395_p3 = ((or_ln462_reg_1842[0:0] == 1'b1) ? 52'd0 : select_ln453_5_fu_1370_p3);

assign select_ln300_4_fu_1387_p3 = ((xor_ln300_1_fu_1381_p2[0:0] == 1'b1) ? 52'd4503599627370495 : 52'd0);

assign select_ln300_fu_1289_p3 = ((and_ln300_reg_1534_pp0_iter30_reg[0:0] == 1'b1) ? 11'd1023 : 11'd2047);

assign select_ln453_1_fu_1243_p3 = ((icmp_ln453_reg_1785[0:0] == 1'b1) ? add_ln451_1_reg_1810 : tmp_7_reg_1763_pp0_iter30_reg);

assign select_ln453_2_fu_1248_p3 = ((or_ln453_fu_1237_p2[0:0] == 1'b1) ? select_ln453_fu_1230_p3 : select_ln453_1_fu_1243_p3);

assign select_ln453_3_fu_1338_p3 = ((and_ln453_2_reg_1832[0:0] == 1'b1) ? tmp_3_fu_1319_p4 : tmp_6_fu_1329_p4);

assign select_ln453_4_fu_1363_p3 = ((icmp_ln453_reg_1785_pp0_iter31_reg[0:0] == 1'b1) ? tmp_10_fu_1345_p4 : tmp_11_fu_1354_p4);

assign select_ln453_5_fu_1370_p3 = ((or_ln453_reg_1837[0:0] == 1'b1) ? select_ln453_3_fu_1338_p3 : select_ln453_4_fu_1363_p3);

assign select_ln453_fu_1230_p3 = ((and_ln453_2_fu_1225_p2[0:0] == 1'b1) ? add_ln451_2_fu_1206_p2 : add_ln451_reg_1793);

assign select_ln482_fu_510_p3 = ((closepath_reg_1433_pp0_iter8_reg[0:0] == 1'b1) ? Ex_V_fu_505_p2 : 11'd0);

assign sext_ln1204_fu_489_p1 = $signed(p_Result_15_fu_481_p3);

assign sext_ln1347_fu_922_p1 = $signed(rhs_2_reg_1657);

assign sext_ln1488_fu_720_p1 = $signed(ush_fu_713_p3);

assign sext_ln1535_fu_704_p1 = Ex_V_3_reg_1510;

assign sext_ln186_fu_1194_p1 = $signed(Ex_V_4_fu_1163_p3);

assign sext_ln461_fu_1262_p1 = $signed(add_ln461_fu_1256_p2);

assign sext_ln813_1_fu_913_p1 = $signed(rhs_1_reg_1652);

assign sext_ln813_fu_909_p1 = $signed(t1_V_fu_878_p3);

assign shl_ln1454_1_fu_1140_p2 = shl_ln1454_reg_1769 << zext_ln1488_2_fu_1136_p1;

assign shl_ln1454_2_fu_1201_p2 = shl_ln1454_1_reg_1798 << zext_ln1488_3_fu_1198_p1;

assign shl_ln1454_3_fu_1314_p2 = shl_ln1454_2_reg_1826 << zext_ln1488_4_fu_1311_p1;

assign shl_ln1454_fu_1065_p2 = result_V_reg_1737 << zext_ln1488_1_fu_1061_p1;

assign sub_ln1512_fu_707_p2 = ($signed(12'd0) - $signed(sext_ln1535_fu_704_p1));

assign t1_V_fu_878_p3 = {{fourth_order_double_sin_cos_K0_V_load_reg_1647}, {4'd0}};

assign tmp_10_fu_1345_p4 = {{shl_ln1454_2_reg_1826[61:10]}};

assign tmp_11_fu_1354_p4 = {{shl_ln1454_reg_1769_pp0_iter31_reg[61:10]}};

assign tmp_13_fu_1272_p3 = newexp_fu_1266_p2[32'd31];

assign tmp_1_fu_453_p4 = {{Mx_bits_V_3_fu_446_p3[123:63]}};

assign tmp_3_fu_1319_p4 = {{shl_ln1454_3_fu_1314_p2[61:10]}};

assign tmp_4_fu_423_p3 = ret_V_5_reg_1476[32'd167];

assign tmp_6_fu_1329_p4 = {{shl_ln1454_1_reg_1798_pp0_iter31_reg[61:10]}};


always @ (p_Result_34_1_fu_1089_p4) begin
    if (p_Result_34_1_fu_1089_p4[0] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd0;
    end else if (p_Result_34_1_fu_1089_p4[1] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd1;
    end else if (p_Result_34_1_fu_1089_p4[2] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd2;
    end else if (p_Result_34_1_fu_1089_p4[3] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd3;
    end else if (p_Result_34_1_fu_1089_p4[4] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd4;
    end else if (p_Result_34_1_fu_1089_p4[5] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd5;
    end else if (p_Result_34_1_fu_1089_p4[6] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd6;
    end else if (p_Result_34_1_fu_1089_p4[7] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd7;
    end else if (p_Result_34_1_fu_1089_p4[8] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd8;
    end else if (p_Result_34_1_fu_1089_p4[9] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd9;
    end else if (p_Result_34_1_fu_1089_p4[10] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd10;
    end else if (p_Result_34_1_fu_1089_p4[11] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd11;
    end else if (p_Result_34_1_fu_1089_p4[12] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd12;
    end else if (p_Result_34_1_fu_1089_p4[13] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd13;
    end else if (p_Result_34_1_fu_1089_p4[14] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd14;
    end else if (p_Result_34_1_fu_1089_p4[15] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd15;
    end else if (p_Result_34_1_fu_1089_p4[16] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd16;
    end else if (p_Result_34_1_fu_1089_p4[17] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd17;
    end else if (p_Result_34_1_fu_1089_p4[18] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd18;
    end else if (p_Result_34_1_fu_1089_p4[19] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd19;
    end else if (p_Result_34_1_fu_1089_p4[20] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd20;
    end else if (p_Result_34_1_fu_1089_p4[21] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd21;
    end else if (p_Result_34_1_fu_1089_p4[22] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd22;
    end else if (p_Result_34_1_fu_1089_p4[23] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd23;
    end else if (p_Result_34_1_fu_1089_p4[24] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd24;
    end else if (p_Result_34_1_fu_1089_p4[25] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd25;
    end else if (p_Result_34_1_fu_1089_p4[26] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd26;
    end else if (p_Result_34_1_fu_1089_p4[27] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd27;
    end else if (p_Result_34_1_fu_1089_p4[28] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd28;
    end else if (p_Result_34_1_fu_1089_p4[29] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd29;
    end else if (p_Result_34_1_fu_1089_p4[30] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd30;
    end else if (p_Result_34_1_fu_1089_p4[31] == 1'b1) begin
        tmp_7_1_fu_1099_p3 = 32'd31;
    end else begin
        tmp_7_1_fu_1099_p3 = 32'd32;
    end
end


always @ (p_Result_34_2_fu_1107_p4) begin
    if (p_Result_34_2_fu_1107_p4[0] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd0;
    end else if (p_Result_34_2_fu_1107_p4[1] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd1;
    end else if (p_Result_34_2_fu_1107_p4[2] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd2;
    end else if (p_Result_34_2_fu_1107_p4[3] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd3;
    end else if (p_Result_34_2_fu_1107_p4[4] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd4;
    end else if (p_Result_34_2_fu_1107_p4[5] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd5;
    end else if (p_Result_34_2_fu_1107_p4[6] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd6;
    end else if (p_Result_34_2_fu_1107_p4[7] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd7;
    end else if (p_Result_34_2_fu_1107_p4[8] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd8;
    end else if (p_Result_34_2_fu_1107_p4[9] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd9;
    end else if (p_Result_34_2_fu_1107_p4[10] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd10;
    end else if (p_Result_34_2_fu_1107_p4[11] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd11;
    end else if (p_Result_34_2_fu_1107_p4[12] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd12;
    end else if (p_Result_34_2_fu_1107_p4[13] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd13;
    end else if (p_Result_34_2_fu_1107_p4[14] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd14;
    end else if (p_Result_34_2_fu_1107_p4[15] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd15;
    end else if (p_Result_34_2_fu_1107_p4[16] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd16;
    end else if (p_Result_34_2_fu_1107_p4[17] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd17;
    end else if (p_Result_34_2_fu_1107_p4[18] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd18;
    end else if (p_Result_34_2_fu_1107_p4[19] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd19;
    end else if (p_Result_34_2_fu_1107_p4[20] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd20;
    end else if (p_Result_34_2_fu_1107_p4[21] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd21;
    end else if (p_Result_34_2_fu_1107_p4[22] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd22;
    end else if (p_Result_34_2_fu_1107_p4[23] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd23;
    end else if (p_Result_34_2_fu_1107_p4[24] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd24;
    end else if (p_Result_34_2_fu_1107_p4[25] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd25;
    end else if (p_Result_34_2_fu_1107_p4[26] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd26;
    end else if (p_Result_34_2_fu_1107_p4[27] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd27;
    end else if (p_Result_34_2_fu_1107_p4[28] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd28;
    end else if (p_Result_34_2_fu_1107_p4[29] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd29;
    end else if (p_Result_34_2_fu_1107_p4[30] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd30;
    end else if (p_Result_34_2_fu_1107_p4[31] == 1'b1) begin
        tmp_7_2_fu_1117_p3 = 32'd31;
    end else begin
        tmp_7_2_fu_1117_p3 = 32'd32;
    end
end


always @ (p_Result_34_3_fu_1176_p4) begin
    if (p_Result_34_3_fu_1176_p4[0] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd0;
    end else if (p_Result_34_3_fu_1176_p4[1] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd1;
    end else if (p_Result_34_3_fu_1176_p4[2] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd2;
    end else if (p_Result_34_3_fu_1176_p4[3] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd3;
    end else if (p_Result_34_3_fu_1176_p4[4] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd4;
    end else if (p_Result_34_3_fu_1176_p4[5] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd5;
    end else if (p_Result_34_3_fu_1176_p4[6] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd6;
    end else if (p_Result_34_3_fu_1176_p4[7] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd7;
    end else if (p_Result_34_3_fu_1176_p4[8] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd8;
    end else if (p_Result_34_3_fu_1176_p4[9] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd9;
    end else if (p_Result_34_3_fu_1176_p4[10] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd10;
    end else if (p_Result_34_3_fu_1176_p4[11] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd11;
    end else if (p_Result_34_3_fu_1176_p4[12] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd12;
    end else if (p_Result_34_3_fu_1176_p4[13] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd13;
    end else if (p_Result_34_3_fu_1176_p4[14] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd14;
    end else if (p_Result_34_3_fu_1176_p4[15] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd15;
    end else if (p_Result_34_3_fu_1176_p4[16] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd16;
    end else if (p_Result_34_3_fu_1176_p4[17] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd17;
    end else if (p_Result_34_3_fu_1176_p4[18] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd18;
    end else if (p_Result_34_3_fu_1176_p4[19] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd19;
    end else if (p_Result_34_3_fu_1176_p4[20] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd20;
    end else if (p_Result_34_3_fu_1176_p4[21] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd21;
    end else if (p_Result_34_3_fu_1176_p4[22] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd22;
    end else if (p_Result_34_3_fu_1176_p4[23] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd23;
    end else if (p_Result_34_3_fu_1176_p4[24] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd24;
    end else if (p_Result_34_3_fu_1176_p4[25] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd25;
    end else if (p_Result_34_3_fu_1176_p4[26] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd26;
    end else if (p_Result_34_3_fu_1176_p4[27] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd27;
    end else if (p_Result_34_3_fu_1176_p4[28] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd28;
    end else if (p_Result_34_3_fu_1176_p4[29] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd29;
    end else if (p_Result_34_3_fu_1176_p4[30] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd30;
    end else if (p_Result_34_3_fu_1176_p4[31] == 1'b1) begin
        tmp_7_3_fu_1186_p3 = 32'd31;
    end else begin
        tmp_7_3_fu_1186_p3 = 32'd32;
    end
end


always @ (p_Result_1_fu_1043_p4) begin
    if (p_Result_1_fu_1043_p4[0] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd0;
    end else if (p_Result_1_fu_1043_p4[1] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd1;
    end else if (p_Result_1_fu_1043_p4[2] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd2;
    end else if (p_Result_1_fu_1043_p4[3] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd3;
    end else if (p_Result_1_fu_1043_p4[4] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd4;
    end else if (p_Result_1_fu_1043_p4[5] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd5;
    end else if (p_Result_1_fu_1043_p4[6] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd6;
    end else if (p_Result_1_fu_1043_p4[7] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd7;
    end else if (p_Result_1_fu_1043_p4[8] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd8;
    end else if (p_Result_1_fu_1043_p4[9] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd9;
    end else if (p_Result_1_fu_1043_p4[10] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd10;
    end else if (p_Result_1_fu_1043_p4[11] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd11;
    end else if (p_Result_1_fu_1043_p4[12] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd12;
    end else if (p_Result_1_fu_1043_p4[13] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd13;
    end else if (p_Result_1_fu_1043_p4[14] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd14;
    end else if (p_Result_1_fu_1043_p4[15] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd15;
    end else if (p_Result_1_fu_1043_p4[16] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd16;
    end else if (p_Result_1_fu_1043_p4[17] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd17;
    end else if (p_Result_1_fu_1043_p4[18] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd18;
    end else if (p_Result_1_fu_1043_p4[19] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd19;
    end else if (p_Result_1_fu_1043_p4[20] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd20;
    end else if (p_Result_1_fu_1043_p4[21] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd21;
    end else if (p_Result_1_fu_1043_p4[22] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd22;
    end else if (p_Result_1_fu_1043_p4[23] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd23;
    end else if (p_Result_1_fu_1043_p4[24] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd24;
    end else if (p_Result_1_fu_1043_p4[25] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd25;
    end else if (p_Result_1_fu_1043_p4[26] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd26;
    end else if (p_Result_1_fu_1043_p4[27] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd27;
    end else if (p_Result_1_fu_1043_p4[28] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd28;
    end else if (p_Result_1_fu_1043_p4[29] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd29;
    end else if (p_Result_1_fu_1043_p4[30] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd30;
    end else if (p_Result_1_fu_1043_p4[31] == 1'b1) begin
        tmp_7_fu_1053_p3 = 32'd31;
    end else begin
        tmp_7_fu_1053_p3 = 32'd32;
    end
end

assign tmp_fu_344_p4 = {{addr_fu_336_p3[10:7]}};


always @ (sext_ln1204_fu_489_p1) begin
    if (sext_ln1204_fu_489_p1[0] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd0;
    end else if (sext_ln1204_fu_489_p1[1] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd1;
    end else if (sext_ln1204_fu_489_p1[2] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd2;
    end else if (sext_ln1204_fu_489_p1[3] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd3;
    end else if (sext_ln1204_fu_489_p1[4] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd4;
    end else if (sext_ln1204_fu_489_p1[5] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd5;
    end else if (sext_ln1204_fu_489_p1[6] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd6;
    end else if (sext_ln1204_fu_489_p1[7] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd7;
    end else if (sext_ln1204_fu_489_p1[8] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd8;
    end else if (sext_ln1204_fu_489_p1[9] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd9;
    end else if (sext_ln1204_fu_489_p1[10] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd10;
    end else if (sext_ln1204_fu_489_p1[11] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd11;
    end else if (sext_ln1204_fu_489_p1[12] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd12;
    end else if (sext_ln1204_fu_489_p1[13] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd13;
    end else if (sext_ln1204_fu_489_p1[14] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd14;
    end else if (sext_ln1204_fu_489_p1[15] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd15;
    end else if (sext_ln1204_fu_489_p1[16] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd16;
    end else if (sext_ln1204_fu_489_p1[17] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd17;
    end else if (sext_ln1204_fu_489_p1[18] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd18;
    end else if (sext_ln1204_fu_489_p1[19] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd19;
    end else if (sext_ln1204_fu_489_p1[20] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd20;
    end else if (sext_ln1204_fu_489_p1[21] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd21;
    end else if (sext_ln1204_fu_489_p1[22] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd22;
    end else if (sext_ln1204_fu_489_p1[23] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd23;
    end else if (sext_ln1204_fu_489_p1[24] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd24;
    end else if (sext_ln1204_fu_489_p1[25] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd25;
    end else if (sext_ln1204_fu_489_p1[26] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd26;
    end else if (sext_ln1204_fu_489_p1[27] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd27;
    end else if (sext_ln1204_fu_489_p1[28] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd28;
    end else if (sext_ln1204_fu_489_p1[29] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd29;
    end else if (sext_ln1204_fu_489_p1[30] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd30;
    end else if (sext_ln1204_fu_489_p1[31] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd31;
    end else if (sext_ln1204_fu_489_p1[32] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd32;
    end else if (sext_ln1204_fu_489_p1[33] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd33;
    end else if (sext_ln1204_fu_489_p1[34] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd34;
    end else if (sext_ln1204_fu_489_p1[35] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd35;
    end else if (sext_ln1204_fu_489_p1[36] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd36;
    end else if (sext_ln1204_fu_489_p1[37] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd37;
    end else if (sext_ln1204_fu_489_p1[38] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd38;
    end else if (sext_ln1204_fu_489_p1[39] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd39;
    end else if (sext_ln1204_fu_489_p1[40] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd40;
    end else if (sext_ln1204_fu_489_p1[41] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd41;
    end else if (sext_ln1204_fu_489_p1[42] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd42;
    end else if (sext_ln1204_fu_489_p1[43] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd43;
    end else if (sext_ln1204_fu_489_p1[44] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd44;
    end else if (sext_ln1204_fu_489_p1[45] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd45;
    end else if (sext_ln1204_fu_489_p1[46] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd46;
    end else if (sext_ln1204_fu_489_p1[47] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd47;
    end else if (sext_ln1204_fu_489_p1[48] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd48;
    end else if (sext_ln1204_fu_489_p1[49] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd49;
    end else if (sext_ln1204_fu_489_p1[50] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd50;
    end else if (sext_ln1204_fu_489_p1[51] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd51;
    end else if (sext_ln1204_fu_489_p1[52] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd52;
    end else if (sext_ln1204_fu_489_p1[53] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd53;
    end else if (sext_ln1204_fu_489_p1[54] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd54;
    end else if (sext_ln1204_fu_489_p1[55] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd55;
    end else if (sext_ln1204_fu_489_p1[56] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd56;
    end else if (sext_ln1204_fu_489_p1[57] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd57;
    end else if (sext_ln1204_fu_489_p1[58] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd58;
    end else if (sext_ln1204_fu_489_p1[59] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd59;
    end else if (sext_ln1204_fu_489_p1[60] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd60;
    end else if (sext_ln1204_fu_489_p1[61] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd61;
    end else if (sext_ln1204_fu_489_p1[62] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd62;
    end else if (sext_ln1204_fu_489_p1[63] == 1'b1) begin
        tmp_s_fu_493_p3 = 64'd63;
    end else begin
        tmp_s_fu_493_p3 = 64'd64;
    end
end

assign trunc_ln628_fu_359_p1 = addr_fu_336_p3[6:0];

assign ush_fu_713_p3 = ((isNeg_reg_1516[0:0] == 1'b1) ? sub_ln1512_fu_707_p2 : sext_ln1535_fu_704_p1);

assign xor_ln1027_fu_430_p2 = (closepath_reg_1433_pp0_iter7_reg ^ 1'd1);

assign xor_ln300_1_fu_1381_p2 = (1'd1 ^ and_ln300_2_fu_1377_p2);

assign xor_ln300_fu_692_p2 = (or_ln300_fu_686_p2 ^ 1'd1);

assign xor_ln453_fu_1211_p2 = (icmp_ln453_1_reg_1804 ^ 1'd1);

assign zext_ln1271_fu_769_p1 = B_trunc_reg_1560;

assign zext_ln1347_1_fu_965_p1 = rhs_4_reg_1707;

assign zext_ln1347_fu_957_p1 = trunc_ln2_reg_1712;

assign zext_ln1454_fu_526_p1 = Mx_zeros_reg_1497;

assign zext_ln1488_1_fu_1061_p1 = tmp_7_fu_1053_p3;

assign zext_ln1488_2_fu_1136_p1 = tmp_7_1_fu_1099_p3;

assign zext_ln1488_3_fu_1198_p1 = tmp_7_2_reg_1780;

assign zext_ln1488_4_fu_1311_p1 = tmp_7_3_reg_1821;

assign zext_ln1488_fu_724_p1 = $unsigned(sext_ln1488_fu_720_p1);

assign zext_ln541_fu_784_p1 = p_Result_16_fu_778_p3;

assign zext_ln668_fu_354_p1 = tmp_fu_344_p4;

assign zext_ln818_fu_800_p1 = B_squared_V_reg_1589;

assign zext_ln841_fu_523_p1 = Mx_zeros_reg_1497;

assign zext_ln930_fu_369_p1 = trunc_ln628_reg_1450_pp0_iter1_reg;

always @ (posedge ap_clk) begin
    zext_ln1271_reg_1565[97:49] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln1271_reg_1565_pp0_iter12_reg[97:49] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln1271_reg_1565_pp0_iter13_reg[97:49] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln1271_reg_1565_pp0_iter14_reg[97:49] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln1271_reg_1565_pp0_iter15_reg[97:49] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln541_reg_1572[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln541_reg_1572_pp0_iter15_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln541_reg_1572_pp0_iter16_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln541_reg_1572_pp0_iter17_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln541_reg_1572_pp0_iter18_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //clusterOp_sin_or_cos_double_s
