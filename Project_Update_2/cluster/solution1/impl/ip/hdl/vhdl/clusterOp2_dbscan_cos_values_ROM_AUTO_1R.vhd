-- ==============================================================
-- Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity clusterOp2_dbscan_cos_values_ROM_AUTO_1R is 
    generic(
             DataWidth     : integer := 18; 
             AddressWidth     : integer := 9; 
             AddressRange    : integer := 360
    ); 
    port (
 
          address0        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce0             : in std_logic; 
          q0              : out std_logic_vector(DataWidth-1 downto 0);

          reset               : in std_logic;
          clk                 : in std_logic
    ); 
end entity; 


architecture rtl of clusterOp2_dbscan_cos_values_ROM_AUTO_1R is 
 
signal address0_tmp : std_logic_vector(AddressWidth-1 downto 0); 

type mem_array is array (0 to AddressRange-1) of std_logic_vector (DataWidth-1 downto 0); 

signal mem0 : mem_array := (
    0 => "010000000000000000", 1 => "001111111111110110", 2 => "001111111111011000", 3 => "001111111110100110", 
    4 => "001111111101100000", 5 => "001111111100000110", 6 => "001111111010011000", 7 => "001111111000010111", 
    8 => "001111110110000010", 9 => "001111110011011001", 10 => "001111110000011100", 11 => "001111101101001011", 
    12 => "001111101001100111", 13 => "001111100101110000", 14 => "001111100001100101", 15 => "001111011101000110", 
    16 => "001111011000010101", 17 => "001111010011010000", 18 => "001111001101111000", 19 => "001111001000001101", 
    20 => "001111000010001111", 21 => "001110111011111111", 22 => "001110110101011011", 23 => "001110101110100110", 
    24 => "001110100111011110", 25 => "001110100000000011", 26 => "001110011000010111", 27 => "001110010000011001", 
    28 => "001110001000001000", 29 => "001101111111100111", 30 => "001101110110110011", 31 => "001101101101101111", 
    32 => "001101100100011001", 33 => "001101011010110011", 34 => "001101010000111011", 35 => "001101000110110011", 
    36 => "001100111100011011", 37 => "001100110001110011", 38 => "001100100110111011", 39 => "001100011011110011", 
    40 => "001100010000011011", 41 => "001100000100110100", 42 => "001011111000111110", 43 => "001011101100111001", 
    44 => "001011100000100110", 45 => "001011010100000100", 46 => "001011000111010101", 47 => "001010111010010111", 
    48 => "001010101101001100", 49 => "001010011111110011", 50 => "001010010010001101", 51 => "001010000100011011", 
    52 => "001001110110011011", 53 => "001001101000010000", 54 => "001001011001111001", 55 => "001001001011010101", 
    56 => "001000111100100111", 57 => "001000101101101101", 58 => "001000011110101000", 59 => "001000001111011001", 
    60 => "001000000000000000", 61 => "000111110000011100", 62 => "000111100000101111", 63 => "000111010000111000", 
    64 => "000111000000111001", 65 => "000110110000110000", 66 => "000110100000011111", 67 => "000110010000000110", 
    68 => "000101111111100110", 69 => "000101101110111110", 70 => "000101011110001110", 71 => "000101001101011000", 
    72 => "000100111100011011", 73 => "000100101011011000", 74 => "000100011010010000", 75 => "000100001001000001", 
    76 => "000011110111101110", 77 => "000011100110010110", 78 => "000011010100111001", 79 => "000011000011011000", 
    80 => "000010110001110100", 81 => "000010100000001100", 82 => "000010001110100000", 83 => "000001111100110010", 
    84 => "000001101011000010", 85 => "000001011001001111", 86 => "000001000111011011", 87 => "000000110101100101", 
    88 => "000000100011101111", 89 => "000000010001110111", 90 => "000000000000000000", 91 => "111111101110001001", 
    92 => "111111011100010001", 93 => "111111001010011011", 94 => "111110111000100101", 95 => "111110100110110001", 
    96 => "111110010100111110", 97 => "111110000011001110", 98 => "111101110001100000", 99 => "111101011111110100", 
    100 => "111101001110001100", 101 => "111100111100101000", 102 => "111100101011000111", 103 => "111100011001101010", 
    104 => "111100001000010010", 105 => "111011110110111111", 106 => "111011100101110000", 107 => "111011010100101000", 
    108 => "111011000011100101", 109 => "111010110010101000", 110 => "111010100001110010", 111 => "111010010001000010", 
    112 => "111010000000011010", 113 => "111001101111111010", 114 => "111001011111100001", 115 => "111001001111010000", 
    116 => "111000111111000111", 117 => "111000101111001000", 118 => "111000011111010001", 119 => "111000001111100100", 
    120 => "111000000000000001", 121 => "110111110000100111", 122 => "110111100001011000", 123 => "110111010010010011", 
    124 => "110111000011011001", 125 => "110110110100101011", 126 => "110110100110000111", 127 => "110110010111110000", 
    128 => "110110001001100101", 129 => "110101111011100101", 130 => "110101101101110011", 131 => "110101100000001101", 
    132 => "110101010010110100", 133 => "110101000101101001", 134 => "110100111000101011", 135 => "110100101011111100", 
    136 => "110100011111011010", 137 => "110100010011000111", 138 => "110100000111000010", 139 => "110011111011001100", 
    140 => "110011101111100101", 141 => "110011100100001101", 142 => "110011011001000101", 143 => "110011001110001101", 
    144 => "110011000011100101", 145 => "110010111001001101", 146 => "110010101111000101", 147 => "110010100101001101", 
    148 => "110010011011100111", 149 => "110010010010010001", 150 => "110010001001001101", 151 => "110010000000011001", 
    152 => "110001110111111000", 153 => "110001101111100111", 154 => "110001100111101001", 155 => "110001011111111101", 
    156 => "110001011000100010", 157 => "110001010001011010", 158 => "110001001010100101", 159 => "110001000100000001", 
    160 => "110000111101110001", 161 => "110000110111110011", 162 => "110000110010001000", 163 => "110000101100110000", 
    164 => "110000100111101011", 165 => "110000100010111010", 166 => "110000011110011011", 167 => "110000011010010000", 
    168 => "110000010110011001", 169 => "110000010010110101", 170 => "110000001111100100", 171 => "110000001100100111", 
    172 => "110000001001111110", 173 => "110000000111101001", 174 => "110000000101101000", 175 => "110000000011111010", 
    176 => "110000000010100000", 177 => "110000000001011010", 178 => "110000000000101000", 179 => "110000000000001010", 
    180 => "110000000000000000", 181 => "110000000000001010", 182 => "110000000000101000", 183 => "110000000001011010", 
    184 => "110000000010100000", 185 => "110000000011111010", 186 => "110000000101101000", 187 => "110000000111101001", 
    188 => "110000001001111110", 189 => "110000001100100111", 190 => "110000001111100100", 191 => "110000010010110101", 
    192 => "110000010110011001", 193 => "110000011010010000", 194 => "110000011110011011", 195 => "110000100010111010", 
    196 => "110000100111101011", 197 => "110000101100110000", 198 => "110000110010001000", 199 => "110000110111110011", 
    200 => "110000111101110001", 201 => "110001000100000001", 202 => "110001001010100101", 203 => "110001010001011010", 
    204 => "110001011000100010", 205 => "110001011111111101", 206 => "110001100111101001", 207 => "110001101111100111", 
    208 => "110001110111111000", 209 => "110010000000011001", 210 => "110010001001001101", 211 => "110010010010010001", 
    212 => "110010011011100111", 213 => "110010100101001101", 214 => "110010101111000101", 215 => "110010111001001101", 
    216 => "110011000011100101", 217 => "110011001110001101", 218 => "110011011001000101", 219 => "110011100100001101", 
    220 => "110011101111100101", 221 => "110011111011001100", 222 => "110100000111000010", 223 => "110100010011000111", 
    224 => "110100011111011010", 225 => "110100101011111100", 226 => "110100111000101011", 227 => "110101000101101001", 
    228 => "110101010010110100", 229 => "110101100000001101", 230 => "110101101101110011", 231 => "110101111011100101", 
    232 => "110110001001100101", 233 => "110110010111110000", 234 => "110110100110000111", 235 => "110110110100101011", 
    236 => "110111000011011001", 237 => "110111010010010011", 238 => "110111100001011000", 239 => "110111110000100111", 
    240 => "111000000000000000", 241 => "111000001111100100", 242 => "111000011111010001", 243 => "111000101111001000", 
    244 => "111000111111000111", 245 => "111001001111010000", 246 => "111001011111100001", 247 => "111001101111111010", 
    248 => "111010000000011010", 249 => "111010010001000010", 250 => "111010100001110010", 251 => "111010110010101000", 
    252 => "111011000011100101", 253 => "111011010100101000", 254 => "111011100101110000", 255 => "111011110110111111", 
    256 => "111100001000010010", 257 => "111100011001101010", 258 => "111100101011000111", 259 => "111100111100101000", 
    260 => "111101001110001100", 261 => "111101011111110100", 262 => "111101110001100000", 263 => "111110000011001110", 
    264 => "111110010100111110", 265 => "111110100110110001", 266 => "111110111000100101", 267 => "111111001010011011", 
    268 => "111111011100010001", 269 => "111111101110001001", 270 => "000000000000000000", 271 => "000000010001110111", 
    272 => "000000100011101111", 273 => "000000110101100101", 274 => "000001000111011011", 275 => "000001011001001111", 
    276 => "000001101011000010", 277 => "000001111100110010", 278 => "000010001110100000", 279 => "000010100000001100", 
    280 => "000010110001110100", 281 => "000011000011011000", 282 => "000011010100111001", 283 => "000011100110010110", 
    284 => "000011110111101110", 285 => "000100001001000001", 286 => "000100011010010000", 287 => "000100101011011000", 
    288 => "000100111100011011", 289 => "000101001101011000", 290 => "000101011110001110", 291 => "000101101110111110", 
    292 => "000101111111100110", 293 => "000110010000000110", 294 => "000110100000011111", 295 => "000110110000110000", 
    296 => "000111000000111001", 297 => "000111010000111000", 298 => "000111100000101111", 299 => "000111110000011100", 
    300 => "001000000000000000", 301 => "001000001111011001", 302 => "001000011110101000", 303 => "001000101101101101", 
    304 => "001000111100100111", 305 => "001001001011010101", 306 => "001001011001111001", 307 => "001001101000010000", 
    308 => "001001110110011011", 309 => "001010000100011011", 310 => "001010010010001101", 311 => "001010011111110011", 
    312 => "001010101101001100", 313 => "001010111010010111", 314 => "001011000111010101", 315 => "001011010100000100", 
    316 => "001011100000100110", 317 => "001011101100111001", 318 => "001011111000111110", 319 => "001100000100110100", 
    320 => "001100010000011011", 321 => "001100011011110011", 322 => "001100100110111011", 323 => "001100110001110011", 
    324 => "001100111100011011", 325 => "001101000110110011", 326 => "001101010000111011", 327 => "001101011010110011", 
    328 => "001101100100011001", 329 => "001101101101101111", 330 => "001101110110110011", 331 => "001101111111100111", 
    332 => "001110001000001000", 333 => "001110010000011001", 334 => "001110011000010111", 335 => "001110100000000011", 
    336 => "001110100111011110", 337 => "001110101110100110", 338 => "001110110101011011", 339 => "001110111011111111", 
    340 => "001111000010001111", 341 => "001111001000001101", 342 => "001111001101111000", 343 => "001111010011010000", 
    344 => "001111011000010101", 345 => "001111011101000110", 346 => "001111100001100101", 347 => "001111100101110000", 
    348 => "001111101001100111", 349 => "001111101101001011", 350 => "001111110000011100", 351 => "001111110011011001", 
    352 => "001111110110000010", 353 => "001111111000010111", 354 => "001111111010011000", 355 => "001111111100000110", 
    356 => "001111111101100000", 357 => "001111111110100110", 358 => "001111111111011000", 359 => "001111111111110110");



begin 

 
memory_access_guard_0: process (address0) 
begin
      address0_tmp <= address0;
--synthesis translate_off
      if (CONV_INTEGER(address0) > AddressRange-1) then
           address0_tmp <= (others => '0');
      else 
           address0_tmp <= address0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
 
        if (ce0 = '1') then  
            q0 <= mem0(CONV_INTEGER(address0_tmp)); 
        end if;

end if;
end process;

end rtl;

